package net.darmo_creations.ti83_compiler.compiler;

import net.darmo_creations.ti83_compiler.exceptions.UnknownInstructionException;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.Arrays;
import java.util.EnumMap;
import java.util.Map;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.fail;

public class SourceCodeParserTest {
  private static Map<Language, SourceCodeParser> parsers;

  @BeforeAll
  static void setUpBeforeAll() {
    parsers = new EnumMap<>(Language.class);
    Arrays.stream(Language.values()).forEach(language -> parsers.put(language, new SourceCodeParser(language)));
  }

  private void compareBytes(final Language language, final String source, final byte[] expectedBytes) {
    byte[] bytes = new byte[expectedBytes.length + 1];
    System.arraycopy(expectedBytes, 0, bytes, 0, expectedBytes.length);
    bytes[bytes.length - 1] = 0x3F; // Add new line byte
    byte[] actualBytes;
    try {
      actualBytes = parsers.get(language).parse(new String[]{source}, false);
      assertArrayEquals(bytes, actualBytes);
    } catch (UnknownInstructionException e) {
      fail(e.getMessage());
    }
  }

  @ParameterizedTest
  @MethodSource("provideArgsForTestEscape")
  void testEscape(final String source, final byte... expectedBytes) {
    this.compareBytes(Language.ENGLISH, source, expectedBytes);
  }

  static Stream<Arguments> provideArgsForTestEscape() {
    return Stream.of(
        Arguments.of("\\&aacute;", new byte[]{(byte) 0xBB, 0x72}), // Special tags cannot be escaped with \
        Arguments.of("&amp;aacute;", new byte[]{
            (byte) 0xBB, (byte) 0xD4, // &
            (byte) 0xBB, (byte) 0xB0, // a
            (byte) 0xBB, (byte) 0xB0, // a
            (byte) 0xBB, (byte) 0xB2, // c
            (byte) 0xBB, (byte) 0xC5, // u
            (byte) 0xBB, (byte) 0xC4, // t
            (byte) 0xBB, (byte) 0xB4, // e
            (byte) 0xBB, (byte) 0xD6 // ;
        }),

        Arguments.of("\\\\", new byte[]{(byte) 0xBB, (byte) 0xD7}),
        Arguments.of("\\1", new byte[]{0x31}),
        Arguments.of("\\->", new byte[]{0x71, 0x6C}),
        Arguments.of("-\\>", new byte[]{0x71, 0x6C}),

        Arguments.of("\\^(-1)", new byte[]{
            (byte) 0xF0, // ^
            0x10, // (
            0x71, // -
            0x31, // 1
            0x11 // )
        }),
        Arguments.of("\\^(_-1)", new byte[]{
            (byte) 0xF0, // ^
            0x10, // (
            (byte) 0xB0, // _-
            0x31, // 1
            0x11 // )
        }),
        Arguments.of("^(\\_-1)", new byte[]{
            (byte) 0xF0, // ^
            0x10, // (
            (byte) 0xBB, (byte) 0xD9, // _
            0x71, // -
            0x31, // 1
            0x11 // )
        }),
        Arguments.of("\\^(2)", new byte[]{
            (byte) 0xF0, // ^
            0x10, // (
            0x32, // 2
            0x11 // )
        }),
        Arguments.of("\\^(3)", new byte[]{
            (byte) 0xF0, // ^
            0x10, // (
            0x33, // 3
            0x11 // )
        }),

        Arguments.of("\\\\\\^(-1)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            (byte) 0xF0, // ^
            0x10, // (
            0x71, // -
            0x31, // 1
            0x11 // )
        }),
        Arguments.of("\\\\\\^(_-1)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            (byte) 0xF0, // ^
            0x10, // (
            (byte) 0xB0, // _-
            0x31, // 1
            0x11 // )
        }),
        Arguments.of("\\\\\\^(2)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            (byte) 0xF0, // ^
            0x10, // (
            0x32, // 2
            0x11 // )
        }),
        Arguments.of("\\\\\\^(3)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            (byte) 0xF0, // ^
            0x10, // (
            0x33, // 3
            0x11 // )
        }),

        Arguments.of("\\\\^(-1)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            0x0C, // ⁻¹
        }),
        Arguments.of("\\\\^(2)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            0x0D, // ²
        }),
        Arguments.of("\\\\^(3)", new byte[]{
            (byte) 0xBB, (byte) 0xD7, // \
            0x0F, // ³
        })
    );
  }

  @ParameterizedTest
  @MethodSource("provideArgsForTest")
  void test(final Language language, final String source, final byte... expectedBytes) {
    this.compareBytes(language, source, expectedBytes);
  }

  static Stream<Arguments> provideArgsForTest() {
    return Stream.of(
        // 0x0#
        Arguments.of(Language.ENGLISH, ">DMS", new byte[]{0x01}),
        Arguments.of(Language.FRENCH, ">DMS", new byte[]{0x01}),
        Arguments.of(Language.ENGLISH, ">Dec", new byte[]{0x02}),
        Arguments.of(Language.FRENCH, ">Dec", new byte[]{0x02}),
        Arguments.of(Language.ENGLISH, ">Frac", new byte[]{0x03}),
        Arguments.of(Language.FRENCH, ">Frac", new byte[]{0x03}),
        Arguments.of(Language.ENGLISH, "->", new byte[]{0x04}),
        Arguments.of(Language.FRENCH, "->", new byte[]{0x04}),
        Arguments.of(Language.ENGLISH, "BoxPlot", new byte[]{0x05}),
        Arguments.of(Language.FRENCH, "Carré", new byte[]{0x05}),
        Arguments.of(Language.ENGLISH, "[", new byte[]{0x06}),
        Arguments.of(Language.FRENCH, "[", new byte[]{0x06}),
        Arguments.of(Language.ENGLISH, "]", new byte[]{0x07}),
        Arguments.of(Language.FRENCH, "]", new byte[]{0x07}),
        Arguments.of(Language.ENGLISH, "{", new byte[]{0x08}),
        Arguments.of(Language.FRENCH, "{", new byte[]{0x08}),
        Arguments.of(Language.ENGLISH, "}", new byte[]{0x09}),
        Arguments.of(Language.FRENCH, "}", new byte[]{0x09}),
        Arguments.of(Language.ENGLISH, "&rexpon;", new byte[]{0x0A}),
        Arguments.of(Language.FRENCH, "&rexpon;", new byte[]{0x0A}),
        Arguments.of(Language.ENGLISH, "°", new byte[]{0x0B}),
        Arguments.of(Language.FRENCH, "°", new byte[]{0x0B}),
        Arguments.of(Language.ENGLISH, "⁻¹", new byte[]{0x0C}),
        Arguments.of(Language.FRENCH, "⁻¹", new byte[]{0x0C}),
        Arguments.of(Language.ENGLISH, "^(-1)", new byte[]{0x0C}),
        Arguments.of(Language.FRENCH, "^(-1)", new byte[]{0x0C}),
        Arguments.of(Language.ENGLISH, "^(_-1)", new byte[]{0x0C}),
        Arguments.of(Language.FRENCH, "^(_-1)", new byte[]{0x0C}),
        Arguments.of(Language.ENGLISH, "²", new byte[]{0x0D}),
        Arguments.of(Language.FRENCH, "²", new byte[]{0x0D}),
        Arguments.of(Language.ENGLISH, "^(2)", new byte[]{0x0D}),
        Arguments.of(Language.FRENCH, "^(2)", new byte[]{0x0D}),
        Arguments.of(Language.ENGLISH, "ᵀ", new byte[]{0x0E}),
        Arguments.of(Language.FRENCH, "ᵀ", new byte[]{0x0E}),
        Arguments.of(Language.ENGLISH, "&T;", new byte[]{0x0E}),
        Arguments.of(Language.FRENCH, "&T;", new byte[]{0x0E}),
        Arguments.of(Language.ENGLISH, "³", new byte[]{0x0F}),
        Arguments.of(Language.FRENCH, "³", new byte[]{0x0F}),
        Arguments.of(Language.ENGLISH, "^(3)", new byte[]{0x0F}),
        Arguments.of(Language.FRENCH, "^(3)", new byte[]{0x0F}),

        // 0x1#
        Arguments.of(Language.ENGLISH, "(", new byte[]{0x10}),
        Arguments.of(Language.FRENCH, "(", new byte[]{0x10}),
        Arguments.of(Language.ENGLISH, ")", new byte[]{0x11}),
        Arguments.of(Language.FRENCH, ")", new byte[]{0x11}),
        Arguments.of(Language.ENGLISH, "round(", new byte[]{0x12}),
        Arguments.of(Language.FRENCH, "arrondi(", new byte[]{0x12}),
        Arguments.of(Language.ENGLISH, "pxl-Test(", new byte[]{0x13}),
        Arguments.of(Language.FRENCH, "pxl-Test(", new byte[]{0x13}),
        Arguments.of(Language.ENGLISH, "augment(", new byte[]{0x14}),
        Arguments.of(Language.FRENCH, "chaîne(", new byte[]{0x14}),
        Arguments.of(Language.ENGLISH, "rowSwap(", new byte[]{0x15}),
        Arguments.of(Language.FRENCH, "permutLigne(", new byte[]{0x15}),
        Arguments.of(Language.ENGLISH, "row+(", new byte[]{0x16}),
        Arguments.of(Language.FRENCH, "ligne+(", new byte[]{0x16}),
        Arguments.of(Language.ENGLISH, "*row(", new byte[]{0x17}),
        Arguments.of(Language.FRENCH, "*ligne(", new byte[]{0x17}),
        Arguments.of(Language.ENGLISH, "*row+(", new byte[]{0x18}),
        Arguments.of(Language.FRENCH, "*ligne+(", new byte[]{0x18}),
        Arguments.of(Language.ENGLISH, "max(", new byte[]{0x19}),
        Arguments.of(Language.FRENCH, "max(", new byte[]{0x19}),
        Arguments.of(Language.ENGLISH, "min(", new byte[]{0x1A}),
        Arguments.of(Language.FRENCH, "min(", new byte[]{0x1A}),
        Arguments.of(Language.ENGLISH, "R>Pr(", new byte[]{0x1B}),
        Arguments.of(Language.FRENCH, "R>Pr(", new byte[]{0x1B}),
        Arguments.of(Language.ENGLISH, "R>Pθ(", new byte[]{0x1C}),
        Arguments.of(Language.FRENCH, "R>Pθ(", new byte[]{0x1C}),
        Arguments.of(Language.ENGLISH, "R>P&theta;(", new byte[]{0x1C}),
        Arguments.of(Language.FRENCH, "R>P&theta;(", new byte[]{0x1C}),
        Arguments.of(Language.ENGLISH, "P>Rx(", new byte[]{0x1D}),
        Arguments.of(Language.FRENCH, "P>Rx(", new byte[]{0x1D}),
        Arguments.of(Language.ENGLISH, "P>Ry(", new byte[]{0x1E}),
        Arguments.of(Language.FRENCH, "P>Ry(", new byte[]{0x1E}),
        Arguments.of(Language.ENGLISH, "median(", new byte[]{0x1F}),
        Arguments.of(Language.FRENCH, "médiane(", new byte[]{0x1F}),

        // 0x2#
        Arguments.of(Language.ENGLISH, "randM(", new byte[]{0x20}),
        Arguments.of(Language.FRENCH, "matAléat(", new byte[]{0x20}),
        Arguments.of(Language.ENGLISH, "mean(", new byte[]{0x21}),
        Arguments.of(Language.FRENCH, "moyenne(", new byte[]{0x21}),
        Arguments.of(Language.ENGLISH, "solve(", new byte[]{0x22}),
        Arguments.of(Language.FRENCH, "résoudre(", new byte[]{0x22}),
        Arguments.of(Language.ENGLISH, "seq(", new byte[]{0x23}),
        Arguments.of(Language.FRENCH, "suite(", new byte[]{0x23}),
        Arguments.of(Language.ENGLISH, "fnInt(", new byte[]{0x24}),
        Arguments.of(Language.FRENCH, "intégrFonct(", new byte[]{0x24}),
        Arguments.of(Language.ENGLISH, "nDeriv(", new byte[]{0x25}),
        Arguments.of(Language.FRENCH, "nbreDériv(", new byte[]{0x25}),
        // 0x26 unused
        Arguments.of(Language.ENGLISH, "fMin(", new byte[]{0x27}),
        Arguments.of(Language.FRENCH, "xfMin(", new byte[]{0x27}),
        Arguments.of(Language.ENGLISH, "fMax(", new byte[]{0x28}),
        Arguments.of(Language.FRENCH, "xfMax(", new byte[]{0x28}),
        Arguments.of(Language.ENGLISH, ". ", new byte[]{0x3A, 0x29}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". ", new byte[]{0x3A, 0x29}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, "\"", new byte[]{0x2A}),
        Arguments.of(Language.FRENCH, "\"", new byte[]{0x2A}),
        Arguments.of(Language.ENGLISH, ",", new byte[]{0x2B}),
        Arguments.of(Language.FRENCH, ",", new byte[]{0x2B}),
        Arguments.of(Language.ENGLISH, "\uD835\uDC56", new byte[]{0x2C}),
        Arguments.of(Language.FRENCH, "\uD835\uDC56", new byte[]{0x2C}),
        Arguments.of(Language.ENGLISH, "&imag;", new byte[]{0x2C}),
        Arguments.of(Language.FRENCH, "&imag;", new byte[]{0x2C}),
        Arguments.of(Language.ENGLISH, "!", new byte[]{0x2D}),
        Arguments.of(Language.FRENCH, "!", new byte[]{0x2D}),
        Arguments.of(Language.ENGLISH, "CubicReg", new byte[]{0x2E}),
        Arguments.of(Language.FRENCH, "RegCubique", new byte[]{0x2E}),
        Arguments.of(Language.ENGLISH, "QuartReg", new byte[]{0x2F}),
        Arguments.of(Language.FRENCH, "RegQuatre", new byte[]{0x2F}),

        //0x3#
        Arguments.of(Language.ENGLISH, "0", new byte[]{0x30}),
        Arguments.of(Language.FRENCH, "0", new byte[]{0x30}),
        Arguments.of(Language.ENGLISH, "1", new byte[]{0x31}),
        Arguments.of(Language.FRENCH, "1", new byte[]{0x31}),
        Arguments.of(Language.ENGLISH, "2", new byte[]{0x32}),
        Arguments.of(Language.FRENCH, "2", new byte[]{0x32}),
        Arguments.of(Language.ENGLISH, "3", new byte[]{0x33}),
        Arguments.of(Language.FRENCH, "3", new byte[]{0x33}),
        Arguments.of(Language.ENGLISH, "4", new byte[]{0x34}),
        Arguments.of(Language.FRENCH, "4", new byte[]{0x34}),
        Arguments.of(Language.ENGLISH, "5", new byte[]{0x35}),
        Arguments.of(Language.FRENCH, "5", new byte[]{0x35}),
        Arguments.of(Language.ENGLISH, "6", new byte[]{0x36}),
        Arguments.of(Language.FRENCH, "6", new byte[]{0x36}),
        Arguments.of(Language.ENGLISH, "7", new byte[]{0x37}),
        Arguments.of(Language.FRENCH, "7", new byte[]{0x37}),
        Arguments.of(Language.ENGLISH, "8", new byte[]{0x38}),
        Arguments.of(Language.FRENCH, "8", new byte[]{0x38}),
        Arguments.of(Language.ENGLISH, "9", new byte[]{0x39}),
        Arguments.of(Language.FRENCH, "9", new byte[]{0x39}),
        Arguments.of(Language.ENGLISH, ".", new byte[]{0x3A}),
        Arguments.of(Language.FRENCH, ".", new byte[]{0x3A}),
        Arguments.of(Language.ENGLISH, "ᴇ", new byte[]{0x3B}),
        Arguments.of(Language.FRENCH, "ᴇ", new byte[]{0x3B}),
        Arguments.of(Language.ENGLISH, "&E;", new byte[]{0x3B}),
        Arguments.of(Language.FRENCH, "&E;", new byte[]{0x3B}),
        Arguments.of(Language.ENGLISH, ". or ", new byte[]{0x3A, 0x3C}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". ou ", new byte[]{0x3A, 0x3C}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, ". xor ", new byte[]{0x3A, 0x3D}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". ouExcl ", new byte[]{0x3A, 0x3D}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, ":", new byte[]{0x3E}),
        Arguments.of(Language.FRENCH, ":", new byte[]{0x3E}),
        // \n not tested here as it has a special behavior

        // 0x4#
        Arguments.of(Language.ENGLISH, ". and ", new byte[]{0x3A, 0x40}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". et ", new byte[]{0x3A, 0x40}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, "A", new byte[]{0x41}),
        Arguments.of(Language.FRENCH, "A", new byte[]{0x41}),
        Arguments.of(Language.ENGLISH, "B", new byte[]{0x42}),
        Arguments.of(Language.FRENCH, "B", new byte[]{0x42}),
        Arguments.of(Language.ENGLISH, "C", new byte[]{0x43}),
        Arguments.of(Language.FRENCH, "C", new byte[]{0x43}),
        Arguments.of(Language.ENGLISH, "D", new byte[]{0x44}),
        Arguments.of(Language.FRENCH, "D", new byte[]{0x44}),
        Arguments.of(Language.ENGLISH, "E", new byte[]{0x45}),
        Arguments.of(Language.FRENCH, "E", new byte[]{0x45}),
        Arguments.of(Language.ENGLISH, "F", new byte[]{0x46}),
        Arguments.of(Language.FRENCH, "F", new byte[]{0x46}),
        Arguments.of(Language.ENGLISH, "G", new byte[]{0x47}),
        Arguments.of(Language.FRENCH, "G", new byte[]{0x47}),
        Arguments.of(Language.ENGLISH, "H", new byte[]{0x48}),
        Arguments.of(Language.FRENCH, "H", new byte[]{0x48}),
        Arguments.of(Language.ENGLISH, "I", new byte[]{0x49}),
        Arguments.of(Language.FRENCH, "I", new byte[]{0x49}),
        Arguments.of(Language.ENGLISH, "J", new byte[]{0x4A}),
        Arguments.of(Language.FRENCH, "J", new byte[]{0x4A}),
        Arguments.of(Language.ENGLISH, "K", new byte[]{0x4B}),
        Arguments.of(Language.FRENCH, "K", new byte[]{0x4B}),
        Arguments.of(Language.ENGLISH, "L", new byte[]{0x4C}),
        Arguments.of(Language.FRENCH, "L", new byte[]{0x4C}),
        Arguments.of(Language.ENGLISH, "M", new byte[]{0x4D}),
        Arguments.of(Language.FRENCH, "M", new byte[]{0x4D}),
        Arguments.of(Language.ENGLISH, "N", new byte[]{0x4E}),
        Arguments.of(Language.FRENCH, "N", new byte[]{0x4E}),
        Arguments.of(Language.ENGLISH, "O", new byte[]{0x4F}),
        Arguments.of(Language.FRENCH, "O", new byte[]{0x4F}),

        // 0x5#
        Arguments.of(Language.ENGLISH, "P", new byte[]{0x50}),
        Arguments.of(Language.FRENCH, "P", new byte[]{0x50}),
        Arguments.of(Language.ENGLISH, "Q", new byte[]{0x51}),
        Arguments.of(Language.FRENCH, "Q", new byte[]{0x51}),
        Arguments.of(Language.ENGLISH, "R", new byte[]{0x52}),
        Arguments.of(Language.FRENCH, "R", new byte[]{0x52}),
        Arguments.of(Language.ENGLISH, "S", new byte[]{0x53}),
        Arguments.of(Language.FRENCH, "S", new byte[]{0x53}),
        Arguments.of(Language.ENGLISH, "T", new byte[]{0x54}),
        Arguments.of(Language.FRENCH, "T", new byte[]{0x54}),
        Arguments.of(Language.ENGLISH, "U", new byte[]{0x55}),
        Arguments.of(Language.FRENCH, "U", new byte[]{0x55}),
        Arguments.of(Language.ENGLISH, "V", new byte[]{0x56}),
        Arguments.of(Language.FRENCH, "V", new byte[]{0x56}),
        Arguments.of(Language.ENGLISH, "W", new byte[]{0x57}),
        Arguments.of(Language.FRENCH, "W", new byte[]{0x57}),
        Arguments.of(Language.ENGLISH, "X", new byte[]{0x58}),
        Arguments.of(Language.FRENCH, "X", new byte[]{0x58}),
        Arguments.of(Language.ENGLISH, "Y", new byte[]{0x59}),
        Arguments.of(Language.FRENCH, "Y", new byte[]{0x59}),
        Arguments.of(Language.ENGLISH, "Z", new byte[]{0x5A}),
        Arguments.of(Language.FRENCH, "Z", new byte[]{0x5A}),
        Arguments.of(Language.ENGLISH, "θ", new byte[]{0x5B}),
        Arguments.of(Language.FRENCH, "θ", new byte[]{0x5B}),
        Arguments.of(Language.ENGLISH, "&theta;", new byte[]{0x5B}),
        Arguments.of(Language.FRENCH, "&theta;", new byte[]{0x5B}),

        // 0x5C 0x0#
        Arguments.of(Language.ENGLISH, "[A]", new byte[]{0x5C, 0x00}),
        Arguments.of(Language.FRENCH, "[A]", new byte[]{0x5C, 0x00}),
        Arguments.of(Language.ENGLISH, "[B]", new byte[]{0x5C, 0x01}),
        Arguments.of(Language.FRENCH, "[B]", new byte[]{0x5C, 0x01}),
        Arguments.of(Language.ENGLISH, "[C]", new byte[]{0x5C, 0x02}),
        Arguments.of(Language.FRENCH, "[C]", new byte[]{0x5C, 0x02}),
        Arguments.of(Language.ENGLISH, "[D]", new byte[]{0x5C, 0x03}),
        Arguments.of(Language.FRENCH, "[D]", new byte[]{0x5C, 0x03}),
        Arguments.of(Language.ENGLISH, "[E]", new byte[]{0x5C, 0x04}),
        Arguments.of(Language.FRENCH, "[E]", new byte[]{0x5C, 0x04}),
        Arguments.of(Language.ENGLISH, "[F]", new byte[]{0x5C, 0x05}),
        Arguments.of(Language.FRENCH, "[F]", new byte[]{0x5C, 0x05}),
        Arguments.of(Language.ENGLISH, "[G]", new byte[]{0x5C, 0x06}),
        Arguments.of(Language.FRENCH, "[G]", new byte[]{0x5C, 0x06}),
        Arguments.of(Language.ENGLISH, "[H]", new byte[]{0x5C, 0x07}),
        Arguments.of(Language.FRENCH, "[H]", new byte[]{0x5C, 0x07}),
        Arguments.of(Language.ENGLISH, "[I]", new byte[]{0x5C, 0x08}),
        Arguments.of(Language.FRENCH, "[I]", new byte[]{0x5C, 0x08}),
        Arguments.of(Language.ENGLISH, "[J]", new byte[]{0x5C, 0x09}),
        Arguments.of(Language.FRENCH, "[J]", new byte[]{0x5C, 0x09}),

        // 0x5D 0x0#
        Arguments.of(Language.ENGLISH, "L1", new byte[]{0x5D, 0x00}),
        Arguments.of(Language.FRENCH, "L1", new byte[]{0x5D, 0x00}),
        Arguments.of(Language.ENGLISH, "L2", new byte[]{0x5D, 0x01}),
        Arguments.of(Language.FRENCH, "L2", new byte[]{0x5D, 0x01}),
        Arguments.of(Language.ENGLISH, "L3", new byte[]{0x5D, 0x02}),
        Arguments.of(Language.FRENCH, "L3", new byte[]{0x5D, 0x02}),
        Arguments.of(Language.ENGLISH, "L4", new byte[]{0x5D, 0x03}),
        Arguments.of(Language.FRENCH, "L4", new byte[]{0x5D, 0x03}),
        Arguments.of(Language.ENGLISH, "L5", new byte[]{0x5D, 0x04}),
        Arguments.of(Language.FRENCH, "L5", new byte[]{0x5D, 0x04}),
        Arguments.of(Language.ENGLISH, "L6", new byte[]{0x5D, 0x05}),
        Arguments.of(Language.FRENCH, "L6", new byte[]{0x5D, 0x05}),

        // 0x5E 0x1#
        Arguments.of(Language.ENGLISH, "Y1", new byte[]{0x5E, 0x10}),
        Arguments.of(Language.FRENCH, "Y1", new byte[]{0x5E, 0x10}),
        Arguments.of(Language.ENGLISH, "Y2", new byte[]{0x5E, 0x11}),
        Arguments.of(Language.FRENCH, "Y2", new byte[]{0x5E, 0x11}),
        Arguments.of(Language.ENGLISH, "Y3", new byte[]{0x5E, 0x12}),
        Arguments.of(Language.FRENCH, "Y3", new byte[]{0x5E, 0x12}),
        Arguments.of(Language.ENGLISH, "Y4", new byte[]{0x5E, 0x13}),
        Arguments.of(Language.FRENCH, "Y4", new byte[]{0x5E, 0x13}),
        Arguments.of(Language.ENGLISH, "Y5", new byte[]{0x5E, 0x14}),
        Arguments.of(Language.FRENCH, "Y5", new byte[]{0x5E, 0x14}),
        Arguments.of(Language.ENGLISH, "Y6", new byte[]{0x5E, 0x15}),
        Arguments.of(Language.FRENCH, "Y6", new byte[]{0x5E, 0x15}),
        Arguments.of(Language.ENGLISH, "Y7", new byte[]{0x5E, 0x16}),
        Arguments.of(Language.FRENCH, "Y7", new byte[]{0x5E, 0x16}),
        Arguments.of(Language.ENGLISH, "Y8", new byte[]{0x5E, 0x17}),
        Arguments.of(Language.FRENCH, "Y8", new byte[]{0x5E, 0x17}),
        Arguments.of(Language.ENGLISH, "Y9", new byte[]{0x5E, 0x18}),
        Arguments.of(Language.FRENCH, "Y9", new byte[]{0x5E, 0x18}),
        Arguments.of(Language.ENGLISH, "Y0", new byte[]{0x5E, 0x19}),
        Arguments.of(Language.FRENCH, "Y0", new byte[]{0x5E, 0x19}),

        // 0x5E 0x2#
        Arguments.of(Language.ENGLISH, "X1T", new byte[]{0x5E, 0x20}),
        Arguments.of(Language.FRENCH, "X1T", new byte[]{0x5E, 0x20}),
        Arguments.of(Language.ENGLISH, "Y1T", new byte[]{0x5E, 0x21}),
        Arguments.of(Language.FRENCH, "Y1T", new byte[]{0x5E, 0x21}),
        Arguments.of(Language.ENGLISH, "X2T", new byte[]{0x5E, 0x22}),
        Arguments.of(Language.FRENCH, "X2T", new byte[]{0x5E, 0x22}),
        Arguments.of(Language.ENGLISH, "Y2T", new byte[]{0x5E, 0x23}),
        Arguments.of(Language.FRENCH, "Y2T", new byte[]{0x5E, 0x23}),
        Arguments.of(Language.ENGLISH, "X3T", new byte[]{0x5E, 0x24}),
        Arguments.of(Language.FRENCH, "X3T", new byte[]{0x5E, 0x24}),
        Arguments.of(Language.ENGLISH, "Y3T", new byte[]{0x5E, 0x25}),
        Arguments.of(Language.FRENCH, "Y3T", new byte[]{0x5E, 0x25}),
        Arguments.of(Language.ENGLISH, "X4T", new byte[]{0x5E, 0x26}),
        Arguments.of(Language.FRENCH, "X4T", new byte[]{0x5E, 0x26}),
        Arguments.of(Language.ENGLISH, "Y4T", new byte[]{0x5E, 0x27}),
        Arguments.of(Language.FRENCH, "Y4T", new byte[]{0x5E, 0x27}),
        Arguments.of(Language.ENGLISH, "X5T", new byte[]{0x5E, 0x28}),
        Arguments.of(Language.FRENCH, "X5T", new byte[]{0x5E, 0x28}),
        Arguments.of(Language.ENGLISH, "Y5T", new byte[]{0x5E, 0x29}),
        Arguments.of(Language.FRENCH, "Y5T", new byte[]{0x5E, 0x29}),
        Arguments.of(Language.ENGLISH, "X6T", new byte[]{0x5E, 0x2A}),
        Arguments.of(Language.FRENCH, "X6T", new byte[]{0x5E, 0x2A}),
        Arguments.of(Language.ENGLISH, "Y6T", new byte[]{0x5E, 0x2B}),
        Arguments.of(Language.FRENCH, "Y6T", new byte[]{0x5E, 0x2B}),

        // 0x5E 0x4#
        Arguments.of(Language.ENGLISH, "r1", new byte[]{0x5E, 0x40}),
        Arguments.of(Language.FRENCH, "r1", new byte[]{0x5E, 0x40}),
        Arguments.of(Language.ENGLISH, "r2", new byte[]{0x5E, 0x41}),
        Arguments.of(Language.FRENCH, "r2", new byte[]{0x5E, 0x41}),
        Arguments.of(Language.ENGLISH, "r3", new byte[]{0x5E, 0x42}),
        Arguments.of(Language.FRENCH, "r3", new byte[]{0x5E, 0x42}),
        Arguments.of(Language.ENGLISH, "r4", new byte[]{0x5E, 0x43}),
        Arguments.of(Language.FRENCH, "r4", new byte[]{0x5E, 0x43}),
        Arguments.of(Language.ENGLISH, "r5", new byte[]{0x5E, 0x44}),
        Arguments.of(Language.FRENCH, "r5", new byte[]{0x5E, 0x44}),
        Arguments.of(Language.ENGLISH, "r6", new byte[]{0x5E, 0x45}),
        Arguments.of(Language.FRENCH, "r6", new byte[]{0x5E, 0x45}),

        // 0x5E 0x8#
        Arguments.of(Language.ENGLISH, "\uD835\uDDCE", new byte[]{0x5E, (byte) 0x80}),
        Arguments.of(Language.FRENCH, "\uD835\uDDCE", new byte[]{0x5E, (byte) 0x80}),
        Arguments.of(Language.ENGLISH, "&varu;", new byte[]{0x5E, (byte) 0x80}),
        Arguments.of(Language.FRENCH, "&varu;", new byte[]{0x5E, (byte) 0x80}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDCF", new byte[]{0x5E, (byte) 0x81}),
        Arguments.of(Language.FRENCH, "\uD835\uDDCF", new byte[]{0x5E, (byte) 0x81}),
        Arguments.of(Language.ENGLISH, "&varv;", new byte[]{0x5E, (byte) 0x81}),
        Arguments.of(Language.FRENCH, "&varv;", new byte[]{0x5E, (byte) 0x81}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDD0", new byte[]{0x5E, (byte) 0x82}),
        Arguments.of(Language.FRENCH, "\uD835\uDDD0", new byte[]{0x5E, (byte) 0x82}),
        Arguments.of(Language.ENGLISH, "&varw;", new byte[]{0x5E, (byte) 0x82}),
        Arguments.of(Language.FRENCH, "&varw;", new byte[]{0x5E, (byte) 0x82}),

        Arguments.of(Language.ENGLISH, "prgm", new byte[]{0x5F}),
        Arguments.of(Language.FRENCH, "prgm", new byte[]{0x5F}),

        // 0x60 0x0#
        Arguments.of(Language.ENGLISH, "Pic1", new byte[]{0x60, 0x00}),
        Arguments.of(Language.FRENCH, "Img1", new byte[]{0x60, 0x00}),
        Arguments.of(Language.ENGLISH, "Pic2", new byte[]{0x60, 0x01}),
        Arguments.of(Language.FRENCH, "Img2", new byte[]{0x60, 0x01}),
        Arguments.of(Language.ENGLISH, "Pic3", new byte[]{0x60, 0x02}),
        Arguments.of(Language.FRENCH, "Img3", new byte[]{0x60, 0x02}),
        Arguments.of(Language.ENGLISH, "Pic4", new byte[]{0x60, 0x03}),
        Arguments.of(Language.FRENCH, "Img4", new byte[]{0x60, 0x03}),
        Arguments.of(Language.ENGLISH, "Pic5", new byte[]{0x60, 0x04}),
        Arguments.of(Language.FRENCH, "Img5", new byte[]{0x60, 0x04}),
        Arguments.of(Language.ENGLISH, "Pic6", new byte[]{0x60, 0x05}),
        Arguments.of(Language.FRENCH, "Img6", new byte[]{0x60, 0x05}),
        Arguments.of(Language.ENGLISH, "Pic7", new byte[]{0x60, 0x06}),
        Arguments.of(Language.FRENCH, "Img7", new byte[]{0x60, 0x06}),
        Arguments.of(Language.ENGLISH, "Pic8", new byte[]{0x60, 0x07}),
        Arguments.of(Language.FRENCH, "Img8", new byte[]{0x60, 0x07}),
        Arguments.of(Language.ENGLISH, "Pic9", new byte[]{0x60, 0x08}),
        Arguments.of(Language.FRENCH, "Img9", new byte[]{0x60, 0x08}),
        Arguments.of(Language.ENGLISH, "Pic0", new byte[]{0x60, 0x09}),
        Arguments.of(Language.FRENCH, "Img0", new byte[]{0x60, 0x09}),

        // 0x61 0x0#
        Arguments.of(Language.ENGLISH, "GDB1", new byte[]{0x61, 0x00}),
        Arguments.of(Language.FRENCH, "BDG1", new byte[]{0x61, 0x00}),
        Arguments.of(Language.ENGLISH, "GDB2", new byte[]{0x61, 0x01}),
        Arguments.of(Language.FRENCH, "BDG2", new byte[]{0x61, 0x01}),
        Arguments.of(Language.ENGLISH, "GDB3", new byte[]{0x61, 0x02}),
        Arguments.of(Language.FRENCH, "BDG3", new byte[]{0x61, 0x02}),
        Arguments.of(Language.ENGLISH, "GDB4", new byte[]{0x61, 0x03}),
        Arguments.of(Language.FRENCH, "BDG4", new byte[]{0x61, 0x03}),
        Arguments.of(Language.ENGLISH, "GDB5", new byte[]{0x61, 0x04}),
        Arguments.of(Language.FRENCH, "BDG5", new byte[]{0x61, 0x04}),
        Arguments.of(Language.ENGLISH, "GDB6", new byte[]{0x61, 0x05}),
        Arguments.of(Language.FRENCH, "BDG6", new byte[]{0x61, 0x05}),
        Arguments.of(Language.ENGLISH, "GDB7", new byte[]{0x61, 0x06}),
        Arguments.of(Language.FRENCH, "BDG7", new byte[]{0x61, 0x06}),
        Arguments.of(Language.ENGLISH, "GDB8", new byte[]{0x61, 0x07}),
        Arguments.of(Language.FRENCH, "BDG8", new byte[]{0x61, 0x07}),
        Arguments.of(Language.ENGLISH, "GDB9", new byte[]{0x61, 0x08}),
        Arguments.of(Language.FRENCH, "BDG9", new byte[]{0x61, 0x08}),
        Arguments.of(Language.ENGLISH, "GDB0", new byte[]{0x61, 0x09}),
        Arguments.of(Language.FRENCH, "BDG0", new byte[]{0x61, 0x09}),

        // 0x62 0x0#
        Arguments.of(Language.ENGLISH, "RegEq", new byte[]{0x62, 0x01}),
        Arguments.of(Language.FRENCH, "EqReg", new byte[]{0x62, 0x01}),
        Arguments.of(Language.ENGLISH, "&varn;", new byte[]{0x62, 0x02}),
        Arguments.of(Language.FRENCH, "&varn;", new byte[]{0x62, 0x02}),
        Arguments.of(Language.ENGLISH, "&varn;", new byte[]{0x62, 0x02}),
        Arguments.of(Language.FRENCH, "&varn;", new byte[]{0x62, 0x02}),
        Arguments.of(Language.ENGLISH, "x̄", new byte[]{0x62, 0x03}),
        Arguments.of(Language.FRENCH, "x̄", new byte[]{0x62, 0x03}),
        Arguments.of(Language.ENGLISH, "&xbar;", new byte[]{0x62, 0x03}),
        Arguments.of(Language.FRENCH, "&xbar;", new byte[]{0x62, 0x03}),
        Arguments.of(Language.ENGLISH, "Σx", new byte[]{0x62, 0x04}),
        Arguments.of(Language.FRENCH, "Σx", new byte[]{0x62, 0x04}),
        Arguments.of(Language.ENGLISH, "&Sigma;x", new byte[]{0x62, 0x04}),
        Arguments.of(Language.FRENCH, "&Sigma;x", new byte[]{0x62, 0x04}),
        Arguments.of(Language.ENGLISH, "Σx²", new byte[]{0x62, 0x05}),
        Arguments.of(Language.FRENCH, "Σx²", new byte[]{0x62, 0x05}),
        Arguments.of(Language.ENGLISH, "&Sigma;x²", new byte[]{0x62, 0x05}),
        Arguments.of(Language.FRENCH, "&Sigma;x²", new byte[]{0x62, 0x05}),
        Arguments.of(Language.ENGLISH, "Σx^(2)", new byte[]{0x62, 0x05}),
        Arguments.of(Language.FRENCH, "Σx^(2)", new byte[]{0x62, 0x05}),
        Arguments.of(Language.ENGLISH, "&Sigma;x^(2)", new byte[]{0x62, 0x05}),
        Arguments.of(Language.FRENCH, "&Sigma;x^(2)", new byte[]{0x62, 0x05}),
        Arguments.of(Language.ENGLISH, "Sx", new byte[]{0x62, 0x06}),
        Arguments.of(Language.FRENCH, "Sx", new byte[]{0x62, 0x06}),
        Arguments.of(Language.ENGLISH, "σx", new byte[]{0x62, 0x07}),
        Arguments.of(Language.FRENCH, "σx", new byte[]{0x62, 0x07}),
        Arguments.of(Language.ENGLISH, "&sigma;x", new byte[]{0x62, 0x07}),
        Arguments.of(Language.FRENCH, "&sigma;x", new byte[]{0x62, 0x07}),
        Arguments.of(Language.ENGLISH, "minX", new byte[]{0x62, 0x08}),
        Arguments.of(Language.FRENCH, "minX", new byte[]{0x62, 0x08}),
        Arguments.of(Language.ENGLISH, "maxX", new byte[]{0x62, 0x09}),
        Arguments.of(Language.FRENCH, "maxX", new byte[]{0x62, 0x09}),
        Arguments.of(Language.ENGLISH, "minY", new byte[]{0x62, 0x0A}),
        Arguments.of(Language.FRENCH, "minY", new byte[]{0x62, 0x0A}),
        Arguments.of(Language.ENGLISH, "maxY", new byte[]{0x62, 0x0B}),
        Arguments.of(Language.FRENCH, "maxY", new byte[]{0x62, 0x0B}),
        Arguments.of(Language.ENGLISH, "ȳ", new byte[]{0x62, 0x0C}),
        Arguments.of(Language.FRENCH, "ȳ", new byte[]{0x62, 0x0C}),
        Arguments.of(Language.ENGLISH, "&ybar;", new byte[]{0x62, 0x0C}),
        Arguments.of(Language.FRENCH, "&ybar;", new byte[]{0x62, 0x0C}),
        Arguments.of(Language.ENGLISH, "Σy", new byte[]{0x62, 0x0D}),
        Arguments.of(Language.FRENCH, "Σy", new byte[]{0x62, 0x0D}),
        Arguments.of(Language.ENGLISH, "&Sigma;y", new byte[]{0x62, 0x0D}),
        Arguments.of(Language.FRENCH, "&Sigma;y", new byte[]{0x62, 0x0D}),
        Arguments.of(Language.ENGLISH, "Σy²", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.FRENCH, "Σy²", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.ENGLISH, "&Sigma;y²", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.FRENCH, "&Sigma;y²", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.ENGLISH, "Σy^(2)", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.FRENCH, "Σy^(2)", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.ENGLISH, "&Sigma;y^(2)", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.FRENCH, "&Sigma;y^(2)", new byte[]{0x62, 0x0E}),
        Arguments.of(Language.ENGLISH, "Sy", new byte[]{0x62, 0x0F}),
        Arguments.of(Language.FRENCH, "Sy", new byte[]{0x62, 0x0F}),

        // 0x62 0x1#
        Arguments.of(Language.ENGLISH, "σy", new byte[]{0x62, 0x10}),
        Arguments.of(Language.FRENCH, "σy", new byte[]{0x62, 0x10}),
        Arguments.of(Language.ENGLISH, "&sigma;y", new byte[]{0x62, 0x10}),
        Arguments.of(Language.FRENCH, "&sigma;y", new byte[]{0x62, 0x10}),
        Arguments.of(Language.ENGLISH, "Σxy", new byte[]{0x62, 0x11}),
        Arguments.of(Language.FRENCH, "Σxy", new byte[]{0x62, 0x11}),
        Arguments.of(Language.ENGLISH, "&Sigma;xy", new byte[]{0x62, 0x11}),
        Arguments.of(Language.FRENCH, "&Sigma;xy", new byte[]{0x62, 0x11}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDCB", new byte[]{0x62, 0x12}),
        Arguments.of(Language.FRENCH, "\uD835\uDDCB", new byte[]{0x62, 0x12}),
        Arguments.of(Language.ENGLISH, "&varr;", new byte[]{0x62, 0x12}),
        Arguments.of(Language.FRENCH, "&varr;", new byte[]{0x62, 0x12}),
        Arguments.of(Language.ENGLISH, "Med", new byte[]{0x62, 0x13}),
        Arguments.of(Language.FRENCH, "Med", new byte[]{0x62, 0x13}),
        Arguments.of(Language.ENGLISH, "Q1", new byte[]{0x62, 0x14}),
        Arguments.of(Language.FRENCH, "Q1", new byte[]{0x62, 0x14}),
        Arguments.of(Language.ENGLISH, "Q3", new byte[]{0x62, 0x15}),
        Arguments.of(Language.FRENCH, "Q3", new byte[]{0x62, 0x15}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDBA", new byte[]{0x62, 0x16}),
        Arguments.of(Language.FRENCH, "\uD835\uDDBA", new byte[]{0x62, 0x16}),
        Arguments.of(Language.ENGLISH, "&vara;", new byte[]{0x62, 0x16}),
        Arguments.of(Language.FRENCH, "&vara;", new byte[]{0x62, 0x16}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDBB", new byte[]{0x62, 0x17}),
        Arguments.of(Language.FRENCH, "\uD835\uDDBB", new byte[]{0x62, 0x17}),
        Arguments.of(Language.ENGLISH, "&varb;", new byte[]{0x62, 0x17}),
        Arguments.of(Language.FRENCH, "&varb;", new byte[]{0x62, 0x17}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDBC", new byte[]{0x62, 0x18}),
        Arguments.of(Language.FRENCH, "\uD835\uDDBC", new byte[]{0x62, 0x18}),
        Arguments.of(Language.ENGLISH, "&varc;", new byte[]{0x62, 0x18}),
        Arguments.of(Language.FRENCH, "&varc;", new byte[]{0x62, 0x18}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDBD", new byte[]{0x62, 0x19}),
        Arguments.of(Language.FRENCH, "\uD835\uDDBD", new byte[]{0x62, 0x19}),
        Arguments.of(Language.ENGLISH, "&vard;", new byte[]{0x62, 0x19}),
        Arguments.of(Language.FRENCH, "&vard;", new byte[]{0x62, 0x19}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDBE", new byte[]{0x62, 0x1A}),
        Arguments.of(Language.FRENCH, "\uD835\uDDBE", new byte[]{0x62, 0x1A}),
        Arguments.of(Language.ENGLISH, "&vare;", new byte[]{0x62, 0x1A}),
        Arguments.of(Language.FRENCH, "&vare;", new byte[]{0x62, 0x1A}),
        Arguments.of(Language.ENGLISH, "x1", new byte[]{0x62, 0x1B}),
        Arguments.of(Language.FRENCH, "x1", new byte[]{0x62, 0x1B}),
        Arguments.of(Language.ENGLISH, "x2", new byte[]{0x62, 0x1C}),
        Arguments.of(Language.FRENCH, "x2", new byte[]{0x62, 0x1C}),
        Arguments.of(Language.ENGLISH, "x3", new byte[]{0x62, 0x1D}),
        Arguments.of(Language.FRENCH, "x3", new byte[]{0x62, 0x1D}),
        Arguments.of(Language.ENGLISH, "y1", new byte[]{0x62, 0x1E}),
        Arguments.of(Language.FRENCH, "y1", new byte[]{0x62, 0x1E}),
        Arguments.of(Language.ENGLISH, "y2", new byte[]{0x62, 0x1F}),
        Arguments.of(Language.FRENCH, "y2", new byte[]{0x62, 0x1F}),

        // 0x62 0x2#
        Arguments.of(Language.ENGLISH, "y3", new byte[]{0x62, 0x20}),
        Arguments.of(Language.FRENCH, "y3", new byte[]{0x62, 0x20}),
        Arguments.of(Language.ENGLISH, "\uD835\uDC5B", new byte[]{0x62, 0x21}),
        Arguments.of(Language.FRENCH, "\uD835\uDC5B", new byte[]{0x62, 0x21}),
        Arguments.of(Language.ENGLISH, "&n;", new byte[]{0x62, 0x21}),
        Arguments.of(Language.FRENCH, "&n;", new byte[]{0x62, 0x21}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDC9", new byte[]{0x62, 0x22}),
        Arguments.of(Language.FRENCH, "\uD835\uDDC9", new byte[]{0x62, 0x22}),
        Arguments.of(Language.ENGLISH, "&varp;", new byte[]{0x62, 0x22}),
        Arguments.of(Language.FRENCH, "&varp;", new byte[]{0x62, 0x22}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDD3", new byte[]{0x62, 0x23}),
        Arguments.of(Language.FRENCH, "\uD835\uDDD3", new byte[]{0x62, 0x23}),
        Arguments.of(Language.ENGLISH, "&varz;", new byte[]{0x62, 0x23}),
        Arguments.of(Language.FRENCH, "&varz;", new byte[]{0x62, 0x23}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDCD", new byte[]{0x62, 0x24}),
        Arguments.of(Language.FRENCH, "\uD835\uDDCD", new byte[]{0x62, 0x24}),
        Arguments.of(Language.ENGLISH, "&vart;", new byte[]{0x62, 0x24}),
        Arguments.of(Language.FRENCH, "&vart;", new byte[]{0x62, 0x24}),
        Arguments.of(Language.ENGLISH, "χ²", new byte[]{0x62, 0x25}),
        Arguments.of(Language.FRENCH, "χ²", new byte[]{0x62, 0x25}),
        Arguments.of(Language.ENGLISH, "&chi;²", new byte[]{0x62, 0x25}),
        Arguments.of(Language.FRENCH, "&chi;²", new byte[]{0x62, 0x25}),
        Arguments.of(Language.ENGLISH, "χ^(2)", new byte[]{0x62, 0x25}),
        Arguments.of(Language.FRENCH, "χ^(2)", new byte[]{0x62, 0x25}),
        Arguments.of(Language.ENGLISH, "&chi;^(2)", new byte[]{0x62, 0x25}),
        Arguments.of(Language.FRENCH, "&chi;^(2)", new byte[]{0x62, 0x25}),
        Arguments.of(Language.ENGLISH, "\uD835\uDE75", new byte[]{0x62, 0x26}),
        Arguments.of(Language.FRENCH, "\uD835\uDE75", new byte[]{0x62, 0x26}),
        Arguments.of(Language.ENGLISH, "&F;", new byte[]{0x62, 0x26}),
        Arguments.of(Language.FRENCH, "&F;", new byte[]{0x62, 0x26}),
        Arguments.of(Language.ENGLISH, "&vardf;", new byte[]{0x62, 0x27}),
        Arguments.of(Language.FRENCH, "&vardf;", new byte[]{0x62, 0x27}),
        Arguments.of(Language.ENGLISH, "p̂", new byte[]{0x62, 0x28}),
        Arguments.of(Language.FRENCH, "p̂", new byte[]{0x62, 0x28}),
        Arguments.of(Language.ENGLISH, "&pcirc;", new byte[]{0x62, 0x28}),
        Arguments.of(Language.FRENCH, "&pcirc;", new byte[]{0x62, 0x28}),
        Arguments.of(Language.ENGLISH, "p̂1", new byte[]{0x62, 0x29}),
        Arguments.of(Language.FRENCH, "p̂1", new byte[]{0x62, 0x29}),
        Arguments.of(Language.ENGLISH, "&pcirc;1", new byte[]{0x62, 0x29}),
        Arguments.of(Language.FRENCH, "&pcirc;1", new byte[]{0x62, 0x29}),
        Arguments.of(Language.ENGLISH, "p̂2", new byte[]{0x62, 0x2A}),
        Arguments.of(Language.FRENCH, "p̂2", new byte[]{0x62, 0x2A}),
        Arguments.of(Language.ENGLISH, "&pcirc;2", new byte[]{0x62, 0x2A}),
        Arguments.of(Language.FRENCH, "&pcirc;2", new byte[]{0x62, 0x2A}),
        Arguments.of(Language.ENGLISH, "x̄1", new byte[]{0x62, 0x2B}),
        Arguments.of(Language.FRENCH, "x̄1", new byte[]{0x62, 0x2B}),
        Arguments.of(Language.ENGLISH, "&xbar;1", new byte[]{0x62, 0x2B}),
        Arguments.of(Language.FRENCH, "&xbar;1", new byte[]{0x62, 0x2B}),
        Arguments.of(Language.ENGLISH, "Sx1", new byte[]{0x62, 0x2C}),
        Arguments.of(Language.FRENCH, "Sx1", new byte[]{0x62, 0x2C}),
        Arguments.of(Language.ENGLISH, "n1", new byte[]{0x62, 0x2D}),
        Arguments.of(Language.FRENCH, "n1", new byte[]{0x62, 0x2D}),
        Arguments.of(Language.ENGLISH, "x̄2", new byte[]{0x62, 0x2E}),
        Arguments.of(Language.FRENCH, "x̄2", new byte[]{0x62, 0x2E}),
        Arguments.of(Language.ENGLISH, "&xbar;2", new byte[]{0x62, 0x2E}),
        Arguments.of(Language.FRENCH, "&xbar;2", new byte[]{0x62, 0x2E}),
        Arguments.of(Language.ENGLISH, "Sx2", new byte[]{0x62, 0x2F}),
        Arguments.of(Language.FRENCH, "Sx2", new byte[]{0x62, 0x2F}),

        // 0x62 0x3#
        Arguments.of(Language.ENGLISH, "n2", new byte[]{0x62, 0x30}),
        Arguments.of(Language.FRENCH, "n2", new byte[]{0x62, 0x30}),
        Arguments.of(Language.ENGLISH, "Sxp", new byte[]{0x62, 0x31}),
        Arguments.of(Language.FRENCH, "Sxp", new byte[]{0x62, 0x31}),
        Arguments.of(Language.ENGLISH, "lower", new byte[]{0x62, 0x32}),
        Arguments.of(Language.FRENCH, "inf", new byte[]{0x62, 0x32}),
        Arguments.of(Language.ENGLISH, "upper", new byte[]{0x62, 0x33}),
        Arguments.of(Language.FRENCH, "sup", new byte[]{0x62, 0x33}),
        Arguments.of(Language.ENGLISH, "\uD835\uDDCC", new byte[]{0x62, 0x34}),
        Arguments.of(Language.FRENCH, "\uD835\uDDCC", new byte[]{0x62, 0x34}),
        Arguments.of(Language.ENGLISH, "&vars;", new byte[]{0x62, 0x34}),
        Arguments.of(Language.FRENCH, "&vars;", new byte[]{0x62, 0x34}),
        Arguments.of(Language.ENGLISH, "r²", new byte[]{0x62, 0x35}),
        Arguments.of(Language.FRENCH, "r²", new byte[]{0x62, 0x35}),
        Arguments.of(Language.ENGLISH, "r^(2)", new byte[]{0x62, 0x35}),
        Arguments.of(Language.FRENCH, "r^(2)", new byte[]{0x62, 0x35}),
        Arguments.of(Language.ENGLISH, "R²", new byte[]{0x62, 0x36}),
        Arguments.of(Language.FRENCH, "R²", new byte[]{0x62, 0x36}),
        Arguments.of(Language.ENGLISH, "R^(2)", new byte[]{0x62, 0x36}),
        Arguments.of(Language.FRENCH, "R^(2)", new byte[]{0x62, 0x36}),
        Arguments.of(Language.ENGLISH, "Factor df", new byte[]{0x62, 0x37}),
        Arguments.of(Language.ENGLISH, "Factor SS", new byte[]{0x62, 0x38}),
        Arguments.of(Language.ENGLISH, "Factor MS", new byte[]{0x62, 0x39}),
        Arguments.of(Language.ENGLISH, "Error df", new byte[]{0x62, 0x3A}),
        Arguments.of(Language.ENGLISH, "Error SS", new byte[]{0x62, 0x3B}),
        Arguments.of(Language.ENGLISH, "Error MS", new byte[]{0x62, 0x3C}),

        // 0x63 0x0#
        Arguments.of(Language.ENGLISH, "ZXscl", new byte[]{0x63, 0x00}),
        Arguments.of(Language.FRENCH, "ZXpas", new byte[]{0x63, 0x00}),
        Arguments.of(Language.ENGLISH, "ZYscl", new byte[]{0x63, 0x01}),
        Arguments.of(Language.FRENCH, "ZYpas", new byte[]{0x63, 0x01}),
        Arguments.of(Language.ENGLISH, "Xscl", new byte[]{0x63, 0x02}),
        Arguments.of(Language.FRENCH, "Xgrad", new byte[]{0x63, 0x02}),
        Arguments.of(Language.ENGLISH, "Yscl", new byte[]{0x63, 0x03}),
        Arguments.of(Language.FRENCH, "Ygrad", new byte[]{0x63, 0x03}),
        Arguments.of(Language.ENGLISH, "u(nMin)", new byte[]{0x63, 0x04}),
        Arguments.of(Language.FRENCH, "u(nMin)", new byte[]{0x63, 0x04}),
        Arguments.of(Language.ENGLISH, "v(nMin)", new byte[]{0x63, 0x05}),
        Arguments.of(Language.FRENCH, "v(nMin)", new byte[]{0x63, 0x05}),
        Arguments.of(Language.ENGLISH, "u(n-1)", new byte[]{0x63, 0x06}),
        Arguments.of(Language.FRENCH, "u(n-1)", new byte[]{0x63, 0x06}),
        Arguments.of(Language.ENGLISH, "v(n-1)", new byte[]{0x63, 0x07}),
        Arguments.of(Language.FRENCH, "v(n-1)", new byte[]{0x63, 0x07}),
        Arguments.of(Language.ENGLISH, "Zu(nMin)", new byte[]{0x63, 0x08}),
        Arguments.of(Language.FRENCH, "Zu(nMin)", new byte[]{0x63, 0x08}),
        Arguments.of(Language.ENGLISH, "Zv(nMin)", new byte[]{0x63, 0x09}),
        Arguments.of(Language.FRENCH, "Zv(nMin)", new byte[]{0x63, 0x09}),
        Arguments.of(Language.ENGLISH, "Xmin", new byte[]{0x63, 0x0A}),
        Arguments.of(Language.FRENCH, "Xmin", new byte[]{0x63, 0x0A}),
        Arguments.of(Language.ENGLISH, "Xmax", new byte[]{0x63, 0x0B}),
        Arguments.of(Language.FRENCH, "Xmax", new byte[]{0x63, 0x0B}),
        Arguments.of(Language.ENGLISH, "Ymin", new byte[]{0x63, 0x0C}),
        Arguments.of(Language.FRENCH, "Ymin", new byte[]{0x63, 0x0C}),
        Arguments.of(Language.ENGLISH, "Ymax", new byte[]{0x63, 0x0D}),
        Arguments.of(Language.FRENCH, "Ymax", new byte[]{0x63, 0x0D}),
        Arguments.of(Language.ENGLISH, "Tmin", new byte[]{0x63, 0x0E}),
        Arguments.of(Language.FRENCH, "Tmin", new byte[]{0x63, 0x0E}),
        Arguments.of(Language.ENGLISH, "Tmax", new byte[]{0x63, 0x0F}),
        Arguments.of(Language.FRENCH, "Tmax", new byte[]{0x63, 0x0F}),

        // 0x63 0x1#
        Arguments.of(Language.ENGLISH, "θmin", new byte[]{0x63, 0x10}),
        Arguments.of(Language.FRENCH, "θmin", new byte[]{0x63, 0x10}),
        Arguments.of(Language.ENGLISH, "&theta;min", new byte[]{0x63, 0x10}),
        Arguments.of(Language.FRENCH, "&theta;min", new byte[]{0x63, 0x10}),
        Arguments.of(Language.ENGLISH, "θmax", new byte[]{0x63, 0x11}),
        Arguments.of(Language.FRENCH, "θmax", new byte[]{0x63, 0x11}),
        Arguments.of(Language.ENGLISH, "&theta;max", new byte[]{0x63, 0x11}),
        Arguments.of(Language.FRENCH, "&theta;max", new byte[]{0x63, 0x11}),
        Arguments.of(Language.ENGLISH, "ZXmin", new byte[]{0x63, 0x12}),
        Arguments.of(Language.FRENCH, "ZXmin", new byte[]{0x63, 0x12}),
        Arguments.of(Language.ENGLISH, "ZXmax", new byte[]{0x63, 0x13}),
        Arguments.of(Language.FRENCH, "ZXmax", new byte[]{0x63, 0x13}),
        Arguments.of(Language.ENGLISH, "ZYmin", new byte[]{0x63, 0x14}),
        Arguments.of(Language.FRENCH, "ZYmin", new byte[]{0x63, 0x14}),
        Arguments.of(Language.ENGLISH, "ZYmax", new byte[]{0x63, 0x15}),
        Arguments.of(Language.FRENCH, "ZYmax", new byte[]{0x63, 0x15}),
        Arguments.of(Language.ENGLISH, "Zθmin", new byte[]{0x63, 0x16}),
        Arguments.of(Language.FRENCH, "Zθmin", new byte[]{0x63, 0x16}),
        Arguments.of(Language.ENGLISH, "Z&theta;min", new byte[]{0x63, 0x16}),
        Arguments.of(Language.FRENCH, "Z&theta;min", new byte[]{0x63, 0x16}),
        Arguments.of(Language.ENGLISH, "Zθmax", new byte[]{0x63, 0x17}),
        Arguments.of(Language.FRENCH, "Zθmax", new byte[]{0x63, 0x17}),
        Arguments.of(Language.ENGLISH, "Z&theta;max", new byte[]{0x63, 0x17}),
        Arguments.of(Language.FRENCH, "Z&theta;max", new byte[]{0x63, 0x17}),
        Arguments.of(Language.ENGLISH, "ZTmin", new byte[]{0x63, 0x18}),
        Arguments.of(Language.FRENCH, "ZTmin", new byte[]{0x63, 0x18}),
        Arguments.of(Language.ENGLISH, "ZTmax", new byte[]{0x63, 0x19}),
        Arguments.of(Language.FRENCH, "ZTmax", new byte[]{0x63, 0x19}),
        Arguments.of(Language.ENGLISH, "TblStart", new byte[]{0x63, 0x1A}),
        Arguments.of(Language.FRENCH, "DébutTbl", new byte[]{0x63, 0x1A}),
        Arguments.of(Language.ENGLISH, "PlotStart", new byte[]{0x63, 0x1B}),
        Arguments.of(Language.FRENCH, "PointDébut", new byte[]{0x63, 0x1B}),
        Arguments.of(Language.ENGLISH, "ZPlotStart", new byte[]{0x63, 0x1C}),
        Arguments.of(Language.FRENCH, "ZPointDébut", new byte[]{0x63, 0x1C}),
        Arguments.of(Language.ENGLISH, "nMax", new byte[]{0x63, 0x1D}),
        Arguments.of(Language.FRENCH, "nMax", new byte[]{0x63, 0x1D}),
        Arguments.of(Language.ENGLISH, "ZnMax", new byte[]{0x63, 0x1E}),
        Arguments.of(Language.FRENCH, "ZnMax", new byte[]{0x63, 0x1E}),
        Arguments.of(Language.ENGLISH, "nMin", new byte[]{0x63, 0x1F}),
        Arguments.of(Language.FRENCH, "nMin", new byte[]{0x63, 0x1F}),

        // 0x63 0x2#
        Arguments.of(Language.ENGLISH, "ZnMin", new byte[]{0x63, 0x20}),
        Arguments.of(Language.FRENCH, "ZnMin", new byte[]{0x63, 0x20}),
        Arguments.of(Language.ENGLISH, "ΔTbl", new byte[]{0x63, 0x21}),
        Arguments.of(Language.FRENCH, "PasTbl", new byte[]{0x63, 0x21}),
        Arguments.of(Language.ENGLISH, "&Delta;Tbl", new byte[]{0x63, 0x21}),
        Arguments.of(Language.ENGLISH, "Tstep", new byte[]{0x63, 0x22}),
        Arguments.of(Language.FRENCH, "Tpas", new byte[]{0x63, 0x22}),
        Arguments.of(Language.ENGLISH, "θstep", new byte[]{0x63, 0x23}),
        Arguments.of(Language.FRENCH, "θpas", new byte[]{0x63, 0x23}),
        Arguments.of(Language.ENGLISH, "&theta;step", new byte[]{0x63, 0x23}),
        Arguments.of(Language.FRENCH, "&theta;pas", new byte[]{0x63, 0x23}),
        Arguments.of(Language.ENGLISH, "ZTstep", new byte[]{0x63, 0x24}),
        Arguments.of(Language.FRENCH, "ZTpas", new byte[]{0x63, 0x24}),
        Arguments.of(Language.ENGLISH, "Zθstep", new byte[]{0x63, 0x25}),
        Arguments.of(Language.FRENCH, "Zθpas", new byte[]{0x63, 0x25}),
        Arguments.of(Language.ENGLISH, "Z&theta;step", new byte[]{0x63, 0x25}),
        Arguments.of(Language.FRENCH, "Z&theta;pas", new byte[]{0x63, 0x25}),
        Arguments.of(Language.ENGLISH, "ΔX", new byte[]{0x63, 0x26}),
        Arguments.of(Language.FRENCH, "PasX", new byte[]{0x63, 0x26}),
        Arguments.of(Language.ENGLISH, "ΔY", new byte[]{0x63, 0x27}),
        Arguments.of(Language.FRENCH, "PasY", new byte[]{0x63, 0x27}),
        Arguments.of(Language.ENGLISH, "XFact", new byte[]{0x63, 0x28}),
        Arguments.of(Language.FRENCH, "XFact", new byte[]{0x63, 0x28}),
        Arguments.of(Language.ENGLISH, "YFact", new byte[]{0x63, 0x29}),
        Arguments.of(Language.FRENCH, "YFact", new byte[]{0x63, 0x29}),
        Arguments.of(Language.ENGLISH, "TblInput", new byte[]{0x63, 0x2A}),
        Arguments.of(Language.FRENCH, "EntréeTbl", new byte[]{0x63, 0x2A}),
        Arguments.of(Language.ENGLISH, "\uD835\uDC0D", new byte[]{0x63, 0x2B}),
        Arguments.of(Language.FRENCH, "\uD835\uDC0D", new byte[]{0x63, 0x2B}),
        Arguments.of(Language.ENGLISH, "&N;", new byte[]{0x63, 0x2B}),
        Arguments.of(Language.FRENCH, "&N;", new byte[]{0x63, 0x2B}),
        Arguments.of(Language.ENGLISH, "I%", new byte[]{0x63, 0x2C}),
        Arguments.of(Language.FRENCH, "I%", new byte[]{0x63, 0x2C}),
        Arguments.of(Language.ENGLISH, "PV", new byte[]{0x63, 0x2D}),
        Arguments.of(Language.FRENCH, "ValAct", new byte[]{0x63, 0x2D}),
        Arguments.of(Language.ENGLISH, "PMT", new byte[]{0x63, 0x2E}),
        Arguments.of(Language.FRENCH, "PMT", new byte[]{0x63, 0x2E}),
        Arguments.of(Language.ENGLISH, "FV", new byte[]{0x63, 0x2F}),
        Arguments.of(Language.FRENCH, "ValAcq", new byte[]{0x63, 0x2F}),

        // 0x63 0x3#
        Arguments.of(Language.ENGLISH, "P/Y", new byte[]{0x63, 0x30}),
        Arguments.of(Language.FRENCH, "Ech/An", new byte[]{0x63, 0x30}),
        Arguments.of(Language.ENGLISH, "C/Y", new byte[]{0x63, 0x31}),
        Arguments.of(Language.FRENCH, "Pér/An", new byte[]{0x63, 0x31}),
        Arguments.of(Language.ENGLISH, "w(nMin)", new byte[]{0x63, 0x32}),
        Arguments.of(Language.FRENCH, "w(nMin)", new byte[]{0x63, 0x32}),
        Arguments.of(Language.ENGLISH, "Zw(nMin)", new byte[]{0x63, 0x33}),
        Arguments.of(Language.FRENCH, "Zw(nMin)", new byte[]{0x63, 0x33}),
        Arguments.of(Language.ENGLISH, "PlotStep", new byte[]{0x63, 0x34}),
        Arguments.of(Language.FRENCH, "GraphPas", new byte[]{0x63, 0x34}),
        Arguments.of(Language.ENGLISH, "ZPlotStep", new byte[]{0x63, 0x35}),
        Arguments.of(Language.FRENCH, "ZGraphPas", new byte[]{0x63, 0x35}),
        Arguments.of(Language.ENGLISH, "Xres", new byte[]{0x63, 0x36}),
        Arguments.of(Language.FRENCH, "Xres", new byte[]{0x63, 0x36}),
        Arguments.of(Language.ENGLISH, "ZXres", new byte[]{0x63, 0x37}),
        Arguments.of(Language.FRENCH, "ZXres", new byte[]{0x63, 0x37}),
        Arguments.of(Language.ENGLISH, "TraceStep", new byte[]{0x63, 0x38}),
        Arguments.of(Language.FRENCH, "TracePas", new byte[]{0x63, 0x38}),

        // 0x6#
        Arguments.of(Language.ENGLISH, "Radian", new byte[]{0x64}),
        Arguments.of(Language.FRENCH, "Radian", new byte[]{0x64}),
        Arguments.of(Language.ENGLISH, "Degree", new byte[]{0x65}),
        Arguments.of(Language.FRENCH, "Degré", new byte[]{0x65}),
        Arguments.of(Language.ENGLISH, "Normal", new byte[]{0x66}),
        Arguments.of(Language.FRENCH, "Normal", new byte[]{0x66}),
        Arguments.of(Language.ENGLISH, "Sci", new byte[]{0x67}),
        Arguments.of(Language.FRENCH, "Sci", new byte[]{0x67}),
        Arguments.of(Language.ENGLISH, "Eng", new byte[]{0x68}),
        Arguments.of(Language.FRENCH, "Ing", new byte[]{0x68}),
        Arguments.of(Language.ENGLISH, "Float", new byte[]{0x69}),
        Arguments.of(Language.FRENCH, "Flottant", new byte[]{0x69}),
        Arguments.of(Language.ENGLISH, "=", new byte[]{0x6A}),
        Arguments.of(Language.FRENCH, "=", new byte[]{0x6A}),
        Arguments.of(Language.ENGLISH, "<", new byte[]{0x6B}),
        Arguments.of(Language.FRENCH, "<", new byte[]{0x6B}),
        Arguments.of(Language.ENGLISH, ">", new byte[]{0x6C}),
        Arguments.of(Language.FRENCH, ">", new byte[]{0x6C}),
        Arguments.of(Language.ENGLISH, "≤", new byte[]{0x6D}),
        Arguments.of(Language.FRENCH, "≤", new byte[]{0x6D}),
        Arguments.of(Language.ENGLISH, "<=", new byte[]{0x6D}),
        Arguments.of(Language.FRENCH, "<=", new byte[]{0x6D}),
        Arguments.of(Language.ENGLISH, "≥", new byte[]{0x6E}),
        Arguments.of(Language.FRENCH, "≥", new byte[]{0x6E}),
        Arguments.of(Language.ENGLISH, ">=", new byte[]{0x6E}),
        Arguments.of(Language.FRENCH, ">=", new byte[]{0x6E}),
        Arguments.of(Language.ENGLISH, "≠", new byte[]{0x6F}),
        Arguments.of(Language.FRENCH, "≠", new byte[]{0x6F}),
        Arguments.of(Language.ENGLISH, "!=", new byte[]{0x6F}),
        Arguments.of(Language.FRENCH, "!=", new byte[]{0x6F}),

        // 0x7#
        Arguments.of(Language.ENGLISH, "+", new byte[]{0x70}),
        Arguments.of(Language.FRENCH, "+", new byte[]{0x70}),
        Arguments.of(Language.ENGLISH, "-", new byte[]{0x71}),
        Arguments.of(Language.FRENCH, "-", new byte[]{0x71}),
        Arguments.of(Language.ENGLISH, "Ans", new byte[]{0x72}),
        Arguments.of(Language.FRENCH, "Rep", new byte[]{0x72}),
        Arguments.of(Language.ENGLISH, "Fix ", new byte[]{0x73}),
        Arguments.of(Language.FRENCH, "Fixe ", new byte[]{0x73}),
        Arguments.of(Language.ENGLISH, "Horiz", new byte[]{0x74}),
        Arguments.of(Language.FRENCH, "Horiz", new byte[]{0x74}),
        Arguments.of(Language.ENGLISH, "Full", new byte[]{0x75}),
        Arguments.of(Language.FRENCH, "PleinEcr", new byte[]{0x75}),
        Arguments.of(Language.ENGLISH, "Func", new byte[]{0x76}),
        Arguments.of(Language.FRENCH, "Fonct", new byte[]{0x76}),
        Arguments.of(Language.ENGLISH, "Param", new byte[]{0x77}),
        Arguments.of(Language.FRENCH, "Param", new byte[]{0x77}),
        Arguments.of(Language.ENGLISH, "Polar", new byte[]{0x78}),
        Arguments.of(Language.FRENCH, "Polaire", new byte[]{0x78}),
        Arguments.of(Language.ENGLISH, "Seq", new byte[]{0x79}),
        Arguments.of(Language.FRENCH, "Suite", new byte[]{0x79}),
        Arguments.of(Language.ENGLISH, "IndpntAuto", new byte[]{0x7A}),
        Arguments.of(Language.FRENCH, "ValeursAuto", new byte[]{0x7A}),
        Arguments.of(Language.ENGLISH, "IndpntAsk", new byte[]{0x7B}),
        Arguments.of(Language.FRENCH, "ValeursDem", new byte[]{0x7B}),
        Arguments.of(Language.ENGLISH, "DependAuto", new byte[]{0x7C}),
        Arguments.of(Language.FRENCH, "CalculsAuto", new byte[]{0x7C}),
        Arguments.of(Language.ENGLISH, "DependAsk", new byte[]{0x7D}),
        Arguments.of(Language.FRENCH, "CalculsDem", new byte[]{0x7D}),

        // 0x7E 0x0#
        Arguments.of(Language.ENGLISH, "Sequential", new byte[]{0x7E, 0x00}),
        Arguments.of(Language.FRENCH, "Séquentiel", new byte[]{0x7E, 0x00}),
        Arguments.of(Language.ENGLISH, "Simul", new byte[]{0x7E, 0x01}),
        Arguments.of(Language.FRENCH, "Simul", new byte[]{0x7E, 0x01}),
        Arguments.of(Language.ENGLISH, "PolarGC", new byte[]{0x7E, 0x02}),
        Arguments.of(Language.FRENCH, "CoordPol", new byte[]{0x7E, 0x02}),
        Arguments.of(Language.ENGLISH, "RectGC", new byte[]{0x7E, 0x03}),
        Arguments.of(Language.FRENCH, "CoordRect", new byte[]{0x7E, 0x03}),
        Arguments.of(Language.ENGLISH, "CoordOn", new byte[]{0x7E, 0x04}),
        Arguments.of(Language.FRENCH, "CoordAff", new byte[]{0x7E, 0x04}),
        Arguments.of(Language.ENGLISH, "CoordOff", new byte[]{0x7E, 0x05}),
        Arguments.of(Language.FRENCH, "CoordNAff", new byte[]{0x7E, 0x05}),
        Arguments.of(Language.ENGLISH, "Connected", new byte[]{0x7E, 0x06}),
        Arguments.of(Language.FRENCH, "Relié", new byte[]{0x7E, 0x06}),
        Arguments.of(Language.ENGLISH, "Dot", new byte[]{0x7E, 0x07}),
        Arguments.of(Language.FRENCH, "NonRelié", new byte[]{0x7E, 0x07}),
        Arguments.of(Language.ENGLISH, "AxesOn", new byte[]{0x7E, 0x08}),
        Arguments.of(Language.FRENCH, "AxesAff", new byte[]{0x7E, 0x08}),
        Arguments.of(Language.ENGLISH, "AxesOff", new byte[]{0x7E, 0x09}),
        Arguments.of(Language.FRENCH, "AxesNAff", new byte[]{0x7E, 0x09}),
        Arguments.of(Language.ENGLISH, "GridOn", new byte[]{0x7E, 0x0A}),
        Arguments.of(Language.FRENCH, "QuadAff", new byte[]{0x7E, 0x0A}),
        Arguments.of(Language.ENGLISH, "GridOff", new byte[]{0x7E, 0x0B}),
        Arguments.of(Language.FRENCH, "QuadNAff", new byte[]{0x7E, 0x0B}),
        Arguments.of(Language.ENGLISH, "LabelOn", new byte[]{0x7E, 0x0C}),
        Arguments.of(Language.FRENCH, "EtiqAff", new byte[]{0x7E, 0x0C}),
        Arguments.of(Language.ENGLISH, "LabelOff", new byte[]{0x7E, 0x0D}),
        Arguments.of(Language.FRENCH, "EtiqNAff", new byte[]{0x7E, 0x0D}),
        Arguments.of(Language.ENGLISH, "Web", new byte[]{0x7E, 0x0E}),
        Arguments.of(Language.FRENCH, "Toile", new byte[]{0x7E, 0x0E}),
        Arguments.of(Language.ENGLISH, "Time", new byte[]{0x7E, 0x0F}),
        Arguments.of(Language.FRENCH, "f(n)", new byte[]{0x7E, 0x0F}),

        // 0x7E 0x1#
        Arguments.of(Language.ENGLISH, "uvAxes", new byte[]{0x7E, 0x10}),
        Arguments.of(Language.FRENCH, "uvAxes", new byte[]{0x7E, 0x10}),
        Arguments.of(Language.ENGLISH, "vwAxes", new byte[]{0x7E, 0x11}),
        Arguments.of(Language.FRENCH, "vwAxes", new byte[]{0x7E, 0x11}),
        Arguments.of(Language.ENGLISH, "uwAxes", new byte[]{0x7E, 0x12}),
        Arguments.of(Language.FRENCH, "uwAxes", new byte[]{0x7E, 0x12}),

        Arguments.of(Language.ENGLISH, "◻", new byte[]{0x7F}),
        Arguments.of(Language.FRENCH, "◻", new byte[]{0x7F}),
        Arguments.of(Language.ENGLISH, "&square;", new byte[]{0x7F}),
        Arguments.of(Language.FRENCH, "&square;", new byte[]{0x7F}),

        // 0x8#
        Arguments.of(Language.ENGLISH, "✛", new byte[]{(byte) 0x80}),
        Arguments.of(Language.FRENCH, "✛", new byte[]{(byte) 0x80}),
        Arguments.of(Language.ENGLISH, "&cross;", new byte[]{(byte) 0x80}),
        Arguments.of(Language.FRENCH, "&cross;", new byte[]{(byte) 0x80}),
        Arguments.of(Language.ENGLISH, "·", new byte[]{(byte) 0x81}),
        Arguments.of(Language.FRENCH, "·", new byte[]{(byte) 0x81}),
        Arguments.of(Language.ENGLISH, "&dot;", new byte[]{(byte) 0x81}),
        Arguments.of(Language.FRENCH, "&dot;", new byte[]{(byte) 0x81}),
        Arguments.of(Language.ENGLISH, "*", new byte[]{(byte) 0x82}),
        Arguments.of(Language.FRENCH, "*", new byte[]{(byte) 0x82}),
        Arguments.of(Language.ENGLISH, "/", new byte[]{(byte) 0x83}),
        Arguments.of(Language.FRENCH, "/", new byte[]{(byte) 0x83}),
        Arguments.of(Language.ENGLISH, "Trace", new byte[]{(byte) 0x84}),
        Arguments.of(Language.FRENCH, "Trace", new byte[]{(byte) 0x84}),
        Arguments.of(Language.ENGLISH, "ClrDraw", new byte[]{(byte) 0x85}),
        Arguments.of(Language.FRENCH, "EffDessin", new byte[]{(byte) 0x85}),
        Arguments.of(Language.ENGLISH, "ZStandard", new byte[]{(byte) 0x86}),
        Arguments.of(Language.FRENCH, "ZStandard", new byte[]{(byte) 0x86}),
        Arguments.of(Language.ENGLISH, "ZTrig", new byte[]{(byte) 0x87}),
        Arguments.of(Language.FRENCH, "ZTrig", new byte[]{(byte) 0x87}),
        Arguments.of(Language.ENGLISH, "ZBox", new byte[]{(byte) 0x88}),
        Arguments.of(Language.FRENCH, "Zboîte", new byte[]{(byte) 0x88}),
        Arguments.of(Language.ENGLISH, "Zoom In", new byte[]{(byte) 0x89}),
        Arguments.of(Language.FRENCH, "Zoom +", new byte[]{(byte) 0x89}),
        Arguments.of(Language.ENGLISH, "Zoom Out", new byte[]{(byte) 0x8A}),
        Arguments.of(Language.FRENCH, "Zoom -", new byte[]{(byte) 0x8A}),
        Arguments.of(Language.ENGLISH, "ZSquare", new byte[]{(byte) 0x8B}),
        Arguments.of(Language.FRENCH, "ZOrthonormal", new byte[]{(byte) 0x8B}),
        Arguments.of(Language.ENGLISH, "ZInteger", new byte[]{(byte) 0x8C}),
        Arguments.of(Language.FRENCH, "ZEntier", new byte[]{(byte) 0x8C}),
        Arguments.of(Language.ENGLISH, "ZPrevious", new byte[]{(byte) 0x8D}),
        Arguments.of(Language.FRENCH, "ZPrécédent", new byte[]{(byte) 0x8D}),
        Arguments.of(Language.ENGLISH, "ZDecimal", new byte[]{(byte) 0x8E}),
        Arguments.of(Language.FRENCH, "ZDécimal", new byte[]{(byte) 0x8E}),
        Arguments.of(Language.ENGLISH, "ZoomStat", new byte[]{(byte) 0x8F}),
        Arguments.of(Language.FRENCH, "ZoomStat", new byte[]{(byte) 0x8F}),

        // 0x9#
        Arguments.of(Language.ENGLISH, "ZoomRcl", new byte[]{(byte) 0x90}),
        Arguments.of(Language.FRENCH, "ZoomRpl", new byte[]{(byte) 0x90}),
        Arguments.of(Language.ENGLISH, "PrintScreen", new byte[]{(byte) 0x91}),
        Arguments.of(Language.FRENCH, "ImprEcr", new byte[]{(byte) 0x91}),
        Arguments.of(Language.ENGLISH, "ZoomSto", new byte[]{(byte) 0x92}),
        Arguments.of(Language.FRENCH, "SauveFen", new byte[]{(byte) 0x92}),
        Arguments.of(Language.ENGLISH, "Text(", new byte[]{(byte) 0x93}),
        Arguments.of(Language.FRENCH, "Texte(", new byte[]{(byte) 0x93}),
        Arguments.of(Language.ENGLISH, ". nPr ", new byte[]{0x3A, (byte) 0x94}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". Arrangement ", new byte[]{0x3A, (byte) 0x94}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, ". nCr ", new byte[]{0x3A, (byte) 0x95}), // Point prevents space from being trimmed
        Arguments.of(Language.FRENCH, ". Combinaison ", new byte[]{0x3A, (byte) 0x95}), // Point prevents space from being trimmed
        Arguments.of(Language.ENGLISH, "FnOn ", new byte[]{(byte) 0x96}),
        Arguments.of(Language.FRENCH, "FonctAff ", new byte[]{(byte) 0x96}),
        Arguments.of(Language.ENGLISH, "FnOff ", new byte[]{(byte) 0x97}),
        Arguments.of(Language.FRENCH, "FonctNAff ", new byte[]{(byte) 0x97}),
        Arguments.of(Language.ENGLISH, "StorePic ", new byte[]{(byte) 0x98}),
        Arguments.of(Language.FRENCH, "SauveImage ", new byte[]{(byte) 0x98}),
        Arguments.of(Language.ENGLISH, "RecallPic ", new byte[]{(byte) 0x99}),
        Arguments.of(Language.FRENCH, "RappelImage ", new byte[]{(byte) 0x99}),
        Arguments.of(Language.ENGLISH, "StoreGDB ", new byte[]{(byte) 0x9A}),
        Arguments.of(Language.FRENCH, "SauveBDG ", new byte[]{(byte) 0x9A}),
        Arguments.of(Language.ENGLISH, "RecallGDB ", new byte[]{(byte) 0x9B}),
        Arguments.of(Language.FRENCH, "RappelBDG ", new byte[]{(byte) 0x9B}),
        Arguments.of(Language.ENGLISH, "Line(", new byte[]{(byte) 0x9C}),
        Arguments.of(Language.FRENCH, "Ligne(", new byte[]{(byte) 0x9C}),
        Arguments.of(Language.ENGLISH, "Vertical ", new byte[]{(byte) 0x9D}),
        Arguments.of(Language.FRENCH, "Verticale ", new byte[]{(byte) 0x9D}),
        Arguments.of(Language.ENGLISH, "Pt-On(", new byte[]{(byte) 0x9E}),
        Arguments.of(Language.FRENCH, "Pt-Aff(", new byte[]{(byte) 0x9E}),
        Arguments.of(Language.ENGLISH, "Pt-Off(", new byte[]{(byte) 0x9F}),
        Arguments.of(Language.FRENCH, "Pt-NAff(", new byte[]{(byte) 0x9F}),

        // 0xA#
        Arguments.of(Language.ENGLISH, "Pt-Change(", new byte[]{(byte) 0xA0}),
        Arguments.of(Language.FRENCH, "Pt-Change(", new byte[]{(byte) 0xA0}),
        Arguments.of(Language.ENGLISH, "Pxl-On(", new byte[]{(byte) 0xA1}),
        Arguments.of(Language.FRENCH, "Pxl-Aff(", new byte[]{(byte) 0xA1}),
        Arguments.of(Language.ENGLISH, "Pxl-Off(", new byte[]{(byte) 0xA2}),
        Arguments.of(Language.FRENCH, "Pxl-NAff(", new byte[]{(byte) 0xA2}),
        Arguments.of(Language.ENGLISH, "Pxl-Change(", new byte[]{(byte) 0xA3}),
        Arguments.of(Language.FRENCH, "Pxl-Change(", new byte[]{(byte) 0xA3}),
        Arguments.of(Language.ENGLISH, "Shade(", new byte[]{(byte) 0xA4}),
        Arguments.of(Language.FRENCH, "Ombre(", new byte[]{(byte) 0xA4}),
        Arguments.of(Language.ENGLISH, "Circle(", new byte[]{(byte) 0xA5}),
        Arguments.of(Language.FRENCH, "Cercle(", new byte[]{(byte) 0xA5}),
        Arguments.of(Language.ENGLISH, "Horizontal ", new byte[]{(byte) 0xA6}),
        Arguments.of(Language.FRENCH, "Horizontale ", new byte[]{(byte) 0xA6}),
        Arguments.of(Language.ENGLISH, "Tangent(", new byte[]{(byte) 0xA7}),
        Arguments.of(Language.FRENCH, "Tangente(", new byte[]{(byte) 0xA7}),
        Arguments.of(Language.ENGLISH, "DrawInv ", new byte[]{(byte) 0xA8}),
        Arguments.of(Language.FRENCH, "DessRecip ", new byte[]{(byte) 0xA8}),
        Arguments.of(Language.ENGLISH, "DrawF ", new byte[]{(byte) 0xA9}),
        Arguments.of(Language.FRENCH, "DessFonct ", new byte[]{(byte) 0xA9}),

        // 0xAA 0x0#
        Arguments.of(Language.ENGLISH, "Str1", new byte[]{(byte) 0xAA, 0x00}),
        Arguments.of(Language.FRENCH, "Chaîne1", new byte[]{(byte) 0xAA, 0x00}),
        Arguments.of(Language.ENGLISH, "Str2", new byte[]{(byte) 0xAA, 0x01}),
        Arguments.of(Language.FRENCH, "Chaîne2", new byte[]{(byte) 0xAA, 0x01}),
        Arguments.of(Language.ENGLISH, "Str3", new byte[]{(byte) 0xAA, 0x02}),
        Arguments.of(Language.FRENCH, "Chaîne3", new byte[]{(byte) 0xAA, 0x02}),
        Arguments.of(Language.ENGLISH, "Str4", new byte[]{(byte) 0xAA, 0x03}),
        Arguments.of(Language.FRENCH, "Chaîne4", new byte[]{(byte) 0xAA, 0x03}),
        Arguments.of(Language.ENGLISH, "Str5", new byte[]{(byte) 0xAA, 0x04}),
        Arguments.of(Language.FRENCH, "Chaîne5", new byte[]{(byte) 0xAA, 0x04}),
        Arguments.of(Language.ENGLISH, "Str6", new byte[]{(byte) 0xAA, 0x05}),
        Arguments.of(Language.FRENCH, "Chaîne6", new byte[]{(byte) 0xAA, 0x05}),
        Arguments.of(Language.ENGLISH, "Str7", new byte[]{(byte) 0xAA, 0x06}),
        Arguments.of(Language.FRENCH, "Chaîne7", new byte[]{(byte) 0xAA, 0x06}),
        Arguments.of(Language.ENGLISH, "Str8", new byte[]{(byte) 0xAA, 0x07}),
        Arguments.of(Language.FRENCH, "Chaîne8", new byte[]{(byte) 0xAA, 0x07}),
        Arguments.of(Language.ENGLISH, "Str9", new byte[]{(byte) 0xAA, 0x08}),
        Arguments.of(Language.FRENCH, "Chaîne9", new byte[]{(byte) 0xAA, 0x08}),
        Arguments.of(Language.ENGLISH, "Str0", new byte[]{(byte) 0xAA, 0x09}),
        Arguments.of(Language.FRENCH, "Chaîne0", new byte[]{(byte) 0xAA, 0x09}),

        // 0xA#
        Arguments.of(Language.ENGLISH, "rand", new byte[]{(byte) 0xAB}),
        Arguments.of(Language.FRENCH, "NbrAléat", new byte[]{(byte) 0xAB}),
        Arguments.of(Language.ENGLISH, "π", new byte[]{(byte) 0xAC}),
        Arguments.of(Language.FRENCH, "π", new byte[]{(byte) 0xAC}),
        Arguments.of(Language.ENGLISH, "&pi;", new byte[]{(byte) 0xAC}),
        Arguments.of(Language.FRENCH, "&pi;", new byte[]{(byte) 0xAC}),
        Arguments.of(Language.ENGLISH, "getKey", new byte[]{(byte) 0xAD}),
        Arguments.of(Language.FRENCH, "codeTouch(", new byte[]{(byte) 0xAD}),
        Arguments.of(Language.ENGLISH, "'", new byte[]{(byte) 0xAE}),
        Arguments.of(Language.FRENCH, "'", new byte[]{(byte) 0xAE}),
        Arguments.of(Language.ENGLISH, "?", new byte[]{(byte) 0xAF}),
        Arguments.of(Language.FRENCH, "?", new byte[]{(byte) 0xAF}),

        // 0xB#
        Arguments.of(Language.ENGLISH, "_-", new byte[]{(byte) 0xB0}),
        Arguments.of(Language.FRENCH, "_-", new byte[]{(byte) 0xB0}),
        Arguments.of(Language.ENGLISH, "int(", new byte[]{(byte) 0xB1}),
        Arguments.of(Language.FRENCH, "partEnt(", new byte[]{(byte) 0xB1}),
        Arguments.of(Language.ENGLISH, "abs(", new byte[]{(byte) 0xB2}),
        Arguments.of(Language.FRENCH, "abs(", new byte[]{(byte) 0xB2}),
        Arguments.of(Language.ENGLISH, "det(", new byte[]{(byte) 0xB3}),
        Arguments.of(Language.FRENCH, "dét(", new byte[]{(byte) 0xB3}),
        Arguments.of(Language.ENGLISH, "identity(", new byte[]{(byte) 0xB4}),
        Arguments.of(Language.FRENCH, "identité(", new byte[]{(byte) 0xB4}),
        Arguments.of(Language.ENGLISH, "dim(", new byte[]{(byte) 0xB5}),
        Arguments.of(Language.FRENCH, "dim(", new byte[]{(byte) 0xB5}),
        Arguments.of(Language.ENGLISH, "sum(", new byte[]{(byte) 0xB6}),
        Arguments.of(Language.FRENCH, "somme(", new byte[]{(byte) 0xB6}),
        Arguments.of(Language.ENGLISH, "prod(", new byte[]{(byte) 0xB7}),
        Arguments.of(Language.FRENCH, "prod(", new byte[]{(byte) 0xB7}),
        Arguments.of(Language.ENGLISH, "not(", new byte[]{(byte) 0xB8}),
        Arguments.of(Language.FRENCH, "non(", new byte[]{(byte) 0xB8}),
        Arguments.of(Language.ENGLISH, "iPart(", new byte[]{(byte) 0xB9}),
        Arguments.of(Language.FRENCH, "ent(", new byte[]{(byte) 0xB9}),
        Arguments.of(Language.ENGLISH, "fPart(", new byte[]{(byte) 0xBA}),
        Arguments.of(Language.FRENCH, "partDéc(", new byte[]{(byte) 0xBA}),

        // 0xBB 0x0#
        Arguments.of(Language.ENGLISH, "npv(", new byte[]{(byte) 0xBB, 0x00}),
        Arguments.of(Language.FRENCH, "vActNet(", new byte[]{(byte) 0xBB, 0x00}),
        Arguments.of(Language.ENGLISH, "irr(", new byte[]{(byte) 0xBB, 0x01}),
        Arguments.of(Language.FRENCH, "tauxRi(", new byte[]{(byte) 0xBB, 0x01}),
        Arguments.of(Language.ENGLISH, "bal(", new byte[]{(byte) 0xBB, 0x02}),
        Arguments.of(Language.FRENCH, "paSolde(", new byte[]{(byte) 0xBB, 0x02}),
        Arguments.of(Language.ENGLISH, "ΣPrn(", new byte[]{(byte) 0xBB, 0x03}),
        Arguments.of(Language.FRENCH, "paSomPrinc(", new byte[]{(byte) 0xBB, 0x03}),
        Arguments.of(Language.ENGLISH, "&Sigma;Prn(", new byte[]{(byte) 0xBB, 0x03}),
        Arguments.of(Language.ENGLISH, "ΣInt(", new byte[]{(byte) 0xBB, 0x04}),
        Arguments.of(Language.FRENCH, "paInt(", new byte[]{(byte) 0xBB, 0x04}),
        Arguments.of(Language.ENGLISH, "&Sigma;Int(", new byte[]{(byte) 0xBB, 0x04}),
        Arguments.of(Language.ENGLISH, ">Nom(", new byte[]{(byte) 0xBB, 0x05}),
        Arguments.of(Language.FRENCH, ">Nom(", new byte[]{(byte) 0xBB, 0x05}),
        Arguments.of(Language.ENGLISH, ">Eff(", new byte[]{(byte) 0xBB, 0x06}),
        Arguments.of(Language.FRENCH, ">Eff(", new byte[]{(byte) 0xBB, 0x06}),
        Arguments.of(Language.ENGLISH, "dbd(", new byte[]{(byte) 0xBB, 0x07}),
        Arguments.of(Language.FRENCH, "jed(", new byte[]{(byte) 0xBB, 0x07}),
        Arguments.of(Language.ENGLISH, "lcm(", new byte[]{(byte) 0xBB, 0x08}),
        Arguments.of(Language.FRENCH, "ppcm(", new byte[]{(byte) 0xBB, 0x08}),
        Arguments.of(Language.ENGLISH, "gcd(", new byte[]{(byte) 0xBB, 0x09}),
        Arguments.of(Language.FRENCH, "pgcd(", new byte[]{(byte) 0xBB, 0x09}),
        Arguments.of(Language.ENGLISH, "randInt(", new byte[]{(byte) 0xBB, 0x0A}),
        Arguments.of(Language.FRENCH, "entAléat(", new byte[]{(byte) 0xBB, 0x0A}),
        Arguments.of(Language.ENGLISH, "randBin(", new byte[]{(byte) 0xBB, 0x0B}),
        Arguments.of(Language.FRENCH, "BinAléat(", new byte[]{(byte) 0xBB, 0x0B}),
        Arguments.of(Language.ENGLISH, "sub(", new byte[]{(byte) 0xBB, 0x0C}),
        Arguments.of(Language.FRENCH, "sous-Chaîne(", new byte[]{(byte) 0xBB, 0x0C}),
        Arguments.of(Language.ENGLISH, "stdDev(", new byte[]{(byte) 0xBB, 0x0D}),
        Arguments.of(Language.FRENCH, "ecart-type(", new byte[]{(byte) 0xBB, 0x0D}),
        Arguments.of(Language.ENGLISH, "variance(", new byte[]{(byte) 0xBB, 0x0E}),
        Arguments.of(Language.FRENCH, "variance(", new byte[]{(byte) 0xBB, 0x0E}),
        Arguments.of(Language.ENGLISH, "inString(", new byte[]{(byte) 0xBB, 0x0F}),
        Arguments.of(Language.FRENCH, "carChaîne(", new byte[]{(byte) 0xBB, 0x0F}),

        // 0xBB 0x1#
        Arguments.of(Language.ENGLISH, "normalcdf(", new byte[]{(byte) 0xBB, 0x10}),
        Arguments.of(Language.FRENCH, "normalFRép(", new byte[]{(byte) 0xBB, 0x10}),
        Arguments.of(Language.ENGLISH, "invNorm(", new byte[]{(byte) 0xBB, 0x11}),
        Arguments.of(Language.FRENCH, "FracNormale(", new byte[]{(byte) 0xBB, 0x11}),
        Arguments.of(Language.ENGLISH, "tcdf(", new byte[]{(byte) 0xBB, 0x12}),
        Arguments.of(Language.FRENCH, "studentFRép(", new byte[]{(byte) 0xBB, 0x12}),
        Arguments.of(Language.ENGLISH, "χ²cdf(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.FRENCH, "χ²FRép(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.ENGLISH, "&chi;²cdf(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.FRENCH, "&chi;²FRép(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.ENGLISH, "χ^(2)cdf(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.FRENCH, "χ^(2)FRép(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.ENGLISH, "&chi;^(2)cdf(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.FRENCH, "&chi;^(2)FRép(", new byte[]{(byte) 0xBB, 0x13}),
        Arguments.of(Language.ENGLISH, "Fcdf(", new byte[]{(byte) 0xBB, 0x14}),
        Arguments.of(Language.FRENCH, "FFRép(", new byte[]{(byte) 0xBB, 0x14}),
        Arguments.of(Language.ENGLISH, "Fcdf(", new byte[]{(byte) 0xBB, 0x14}),
        Arguments.of(Language.FRENCH, "FFRép(", new byte[]{(byte) 0xBB, 0x14}),
        Arguments.of(Language.ENGLISH, "binompdf(", new byte[]{(byte) 0xBB, 0x15}),
        Arguments.of(Language.FRENCH, "binomFdp(", new byte[]{(byte) 0xBB, 0x15}),
        Arguments.of(Language.ENGLISH, "binomcdf(", new byte[]{(byte) 0xBB, 0x16}),
        Arguments.of(Language.FRENCH, "binomFRép(", new byte[]{(byte) 0xBB, 0x16}),
        Arguments.of(Language.ENGLISH, "poissonpdf(", new byte[]{(byte) 0xBB, 0x17}),
        Arguments.of(Language.FRENCH, "poissonFdp(", new byte[]{(byte) 0xBB, 0x17}),
        Arguments.of(Language.ENGLISH, "poissoncdf(", new byte[]{(byte) 0xBB, 0x18}),
        Arguments.of(Language.FRENCH, "poissonFRép(", new byte[]{(byte) 0xBB, 0x18}),
        Arguments.of(Language.ENGLISH, "geometpdf(", new byte[]{(byte) 0xBB, 0x19}),
        Arguments.of(Language.FRENCH, "géomtFdp(", new byte[]{(byte) 0xBB, 0x19}),
        Arguments.of(Language.ENGLISH, "geometcdf(", new byte[]{(byte) 0xBB, 0x1A}),
        Arguments.of(Language.FRENCH, "géomtFRép(", new byte[]{(byte) 0xBB, 0x1A}),
        Arguments.of(Language.ENGLISH, "normalpdf(", new byte[]{(byte) 0xBB, 0x1B}),
        Arguments.of(Language.FRENCH, "normalFdp(", new byte[]{(byte) 0xBB, 0x1B}),
        Arguments.of(Language.ENGLISH, "tpdf(", new byte[]{(byte) 0xBB, 0x1C}),
        Arguments.of(Language.FRENCH, "studentFdp(", new byte[]{(byte) 0xBB, 0x1C}),
        Arguments.of(Language.ENGLISH, "χ²pdf(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.FRENCH, "χ²Fdp(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.ENGLISH, "&chi;²pdf(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.FRENCH, "&chi;²Fdp(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.ENGLISH, "χ^(2)pdf(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.FRENCH, "χ^(2)Fdp(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.ENGLISH, "&chi;^(2)pdf(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.FRENCH, "&chi;^(2)Fdp(", new byte[]{(byte) 0xBB, 0x1D}),
        Arguments.of(Language.ENGLISH, "Fpdf(", new byte[]{(byte) 0xBB, 0x1E}),
        Arguments.of(Language.FRENCH, "FFdp(", new byte[]{(byte) 0xBB, 0x1E}),
        Arguments.of(Language.ENGLISH, "Fpdf(", new byte[]{(byte) 0xBB, 0x1E}),
        Arguments.of(Language.FRENCH, "FFdp(", new byte[]{(byte) 0xBB, 0x1E}),
        Arguments.of(Language.ENGLISH, "randNorm(", new byte[]{(byte) 0xBB, 0x1F}),
        Arguments.of(Language.FRENCH, "normAléat(", new byte[]{(byte) 0xBB, 0x1F}),

        // 0xBB 0x2#
        Arguments.of(Language.ENGLISH, "tvm_Pmt", new byte[]{(byte) 0xBB, 0x20}),
        Arguments.of(Language.FRENCH, "vat_Pmt", new byte[]{(byte) 0xBB, 0x20}),
        Arguments.of(Language.ENGLISH, "tvm_I%", new byte[]{(byte) 0xBB, 0x21}),
        Arguments.of(Language.FRENCH, "vat_I%", new byte[]{(byte) 0xBB, 0x21}),
        Arguments.of(Language.ENGLISH, "tvm_PV", new byte[]{(byte) 0xBB, 0x22}),
        Arguments.of(Language.FRENCH, "vat_Vact", new byte[]{(byte) 0xBB, 0x22}),
        Arguments.of(Language.ENGLISH, "tvm_N", new byte[]{(byte) 0xBB, 0x23}),
        Arguments.of(Language.FRENCH, "vat_N", new byte[]{(byte) 0xBB, 0x23}),
        Arguments.of(Language.ENGLISH, "tvm_FV", new byte[]{(byte) 0xBB, 0x24}),
        Arguments.of(Language.FRENCH, "vat_Vacq", new byte[]{(byte) 0xBB, 0x24}),
        Arguments.of(Language.ENGLISH, "conj(", new byte[]{(byte) 0xBB, 0x25}),
        Arguments.of(Language.FRENCH, "conj(", new byte[]{(byte) 0xBB, 0x25}),
        Arguments.of(Language.ENGLISH, "real(", new byte[]{(byte) 0xBB, 0x26}),
        Arguments.of(Language.FRENCH, "réel(", new byte[]{(byte) 0xBB, 0x26}),
        Arguments.of(Language.ENGLISH, "imag(", new byte[]{(byte) 0xBB, 0x27}),
        Arguments.of(Language.FRENCH, "imag(", new byte[]{(byte) 0xBB, 0x27}),
        Arguments.of(Language.ENGLISH, "angle(", new byte[]{(byte) 0xBB, 0x28}),
        Arguments.of(Language.FRENCH, "argument(", new byte[]{(byte) 0xBB, 0x28}),
        Arguments.of(Language.ENGLISH, "cumSum(", new byte[]{(byte) 0xBB, 0x29}),
        Arguments.of(Language.FRENCH, "somCum(", new byte[]{(byte) 0xBB, 0x29}),
        Arguments.of(Language.ENGLISH, "expr(", new byte[]{(byte) 0xBB, 0x2A}),
        Arguments.of(Language.FRENCH, "expr(", new byte[]{(byte) 0xBB, 0x2A}),
        Arguments.of(Language.ENGLISH, "length(", new byte[]{(byte) 0xBB, 0x2B}),
        Arguments.of(Language.FRENCH, "longueur(", new byte[]{(byte) 0xBB, 0x2B}),
        Arguments.of(Language.ENGLISH, "ΔList(", new byte[]{(byte) 0xBB, 0x2C}),
        Arguments.of(Language.FRENCH, "ΔListe(", new byte[]{(byte) 0xBB, 0x2C}),
        Arguments.of(Language.ENGLISH, "&Delta;List(", new byte[]{(byte) 0xBB, 0x2C}),
        Arguments.of(Language.FRENCH, "&Delta;Liste(", new byte[]{(byte) 0xBB, 0x2C}),
        Arguments.of(Language.ENGLISH, "ref(", new byte[]{(byte) 0xBB, 0x2D}),
        Arguments.of(Language.FRENCH, "Gauss(", new byte[]{(byte) 0xBB, 0x2D}),
        Arguments.of(Language.ENGLISH, "rref(", new byte[]{(byte) 0xBB, 0x2E}),
        Arguments.of(Language.FRENCH, "Gauss-Jordan(", new byte[]{(byte) 0xBB, 0x2E}),
        Arguments.of(Language.ENGLISH, ">Rect", new byte[]{(byte) 0xBB, 0x2F}),
        Arguments.of(Language.FRENCH, ">Rect", new byte[]{(byte) 0xBB, 0x2F}),

        // 0xBB 0x3#
        Arguments.of(Language.ENGLISH, ">Polar", new byte[]{(byte) 0xBB, 0x30}),
        Arguments.of(Language.FRENCH, ">Polaire", new byte[]{(byte) 0xBB, 0x30}),
        Arguments.of(Language.ENGLISH, "\uD835\uDC52", new byte[]{(byte) 0xBB, 0x31}),
        Arguments.of(Language.FRENCH, "\uD835\uDC52", new byte[]{(byte) 0xBB, 0x31}),
        Arguments.of(Language.ENGLISH, "&exp;", new byte[]{(byte) 0xBB, 0x31}),
        Arguments.of(Language.FRENCH, "&exp;", new byte[]{(byte) 0xBB, 0x31}),
        Arguments.of(Language.ENGLISH, "SinReg ", new byte[]{(byte) 0xBB, 0x32}),
        Arguments.of(Language.FRENCH, "RegSin ", new byte[]{(byte) 0xBB, 0x32}),
        Arguments.of(Language.ENGLISH, "Logistic ", new byte[]{(byte) 0xBB, 0x33}),
        Arguments.of(Language.FRENCH, "Logistique ", new byte[]{(byte) 0xBB, 0x33}),
        Arguments.of(Language.ENGLISH, "LinRegTTest ", new byte[]{(byte) 0xBB, 0x34}),
        Arguments.of(Language.FRENCH, "RegLinTTest ", new byte[]{(byte) 0xBB, 0x34}),
        Arguments.of(Language.ENGLISH, "ShadeNorm(", new byte[]{(byte) 0xBB, 0x35}),
        Arguments.of(Language.FRENCH, "OmbreNorm(", new byte[]{(byte) 0xBB, 0x35}),
        Arguments.of(Language.ENGLISH, "Shade_t(", new byte[]{(byte) 0xBB, 0x36}),
        Arguments.of(Language.FRENCH, "Ombre_t(", new byte[]{(byte) 0xBB, 0x36}),
        Arguments.of(Language.ENGLISH, "Shadeχ²(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.FRENCH, "Ombreχ²(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.ENGLISH, "Shade&chi;²(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.FRENCH, "Ombre&chi;²(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.ENGLISH, "Shadeχ^(2)(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.FRENCH, "Ombreχ^(2)(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.ENGLISH, "Shade&chi;^(2)(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.FRENCH, "Ombre&chi;^(2)(", new byte[]{(byte) 0xBB, 0x37}),
        Arguments.of(Language.ENGLISH, "ShadeF(", new byte[]{(byte) 0xBB, 0x38}),
        Arguments.of(Language.FRENCH, "OmbreF(", new byte[]{(byte) 0xBB, 0x38}),
        Arguments.of(Language.ENGLISH, "Matr>list(", new byte[]{(byte) 0xBB, 0x39}),
        Arguments.of(Language.FRENCH, "Matr>liste(", new byte[]{(byte) 0xBB, 0x39}),
        Arguments.of(Language.ENGLISH, "List>matr(", new byte[]{(byte) 0xBB, 0x3A}),
        Arguments.of(Language.FRENCH, "Liste>matr(", new byte[]{(byte) 0xBB, 0x3A}),
        Arguments.of(Language.ENGLISH, "Z-Test(", new byte[]{(byte) 0xBB, 0x3B}),
        Arguments.of(Language.FRENCH, "Z-Test(", new byte[]{(byte) 0xBB, 0x3B}),
        Arguments.of(Language.ENGLISH, "T-Test ", new byte[]{(byte) 0xBB, 0x3C}),
        Arguments.of(Language.FRENCH, "T-Test ", new byte[]{(byte) 0xBB, 0x3C}),
        Arguments.of(Language.ENGLISH, "2-SampZTest(", new byte[]{(byte) 0xBB, 0x3D}),
        Arguments.of(Language.FRENCH, "2-CompZTest(", new byte[]{(byte) 0xBB, 0x3D}),
        Arguments.of(Language.ENGLISH, "1-PropZTest(", new byte[]{(byte) 0xBB, 0x3E}),
        Arguments.of(Language.FRENCH, "1-PropZTest(", new byte[]{(byte) 0xBB, 0x3E}),
        Arguments.of(Language.ENGLISH, "2-PropZTest(", new byte[]{(byte) 0xBB, 0x3F}),
        Arguments.of(Language.FRENCH, "2-PropZTest(", new byte[]{(byte) 0xBB, 0x3F}),

        // 0xBB 0x4#
        Arguments.of(Language.ENGLISH, "χ²-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.FRENCH, "χ²-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.ENGLISH, "&chi;²-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.FRENCH, "&chi;²-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.ENGLISH, "χ^(2)-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.FRENCH, "χ^(2)-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.ENGLISH, "&chi;^(2)-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.FRENCH, "&chi;^(2)-Test(", new byte[]{(byte) 0xBB, 0x40}),
        Arguments.of(Language.ENGLISH, "ZInterval ", new byte[]{(byte) 0xBB, 0x41}),
        Arguments.of(Language.FRENCH, "ZIntConf ", new byte[]{(byte) 0xBB, 0x41}),
        Arguments.of(Language.ENGLISH, "2-SampZInt(", new byte[]{(byte) 0xBB, 0x42}),
        Arguments.of(Language.FRENCH, "2-CompZInt(", new byte[]{(byte) 0xBB, 0x42}),
        Arguments.of(Language.ENGLISH, "1-PropZInt(", new byte[]{(byte) 0xBB, 0x43}),
        Arguments.of(Language.FRENCH, "1-PropZInt(", new byte[]{(byte) 0xBB, 0x43}),
        Arguments.of(Language.ENGLISH, "2-PropZInt(", new byte[]{(byte) 0xBB, 0x44}),
        Arguments.of(Language.FRENCH, "2-PropZInt(", new byte[]{(byte) 0xBB, 0x44}),
        Arguments.of(Language.ENGLISH, "GraphStyle(", new byte[]{(byte) 0xBB, 0x45}),
        Arguments.of(Language.FRENCH, "GraphStyle(", new byte[]{(byte) 0xBB, 0x45}),
        Arguments.of(Language.ENGLISH, "2-SampTTest ", new byte[]{(byte) 0xBB, 0x46}),
        Arguments.of(Language.FRENCH, "2-CompTTest ", new byte[]{(byte) 0xBB, 0x46}),
        Arguments.of(Language.ENGLISH, "2-SampFTest ", new byte[]{(byte) 0xBB, 0x47}),
        Arguments.of(Language.FRENCH, "2-CompFTest ", new byte[]{(byte) 0xBB, 0x47}),
        Arguments.of(Language.ENGLISH, "TInterval ", new byte[]{(byte) 0xBB, 0x48}),
        Arguments.of(Language.FRENCH, "TIntConf ", new byte[]{(byte) 0xBB, 0x48}),
        Arguments.of(Language.ENGLISH, "2-SampTInt ", new byte[]{(byte) 0xBB, 0x49}),
        Arguments.of(Language.FRENCH, "2-CompTInt ", new byte[]{(byte) 0xBB, 0x49}),
        Arguments.of(Language.ENGLISH, "SetUpEditor ", new byte[]{(byte) 0xBB, 0x4A}),
        Arguments.of(Language.FRENCH, "ListesDéfaut ", new byte[]{(byte) 0xBB, 0x4A}),
        Arguments.of(Language.ENGLISH, "Pmt_End", new byte[]{(byte) 0xBB, 0x4B}),
        Arguments.of(Language.FRENCH, "Pmt_Fin", new byte[]{(byte) 0xBB, 0x4B}),
        Arguments.of(Language.ENGLISH, "Pmt_Bgn", new byte[]{(byte) 0xBB, 0x4C}),
        Arguments.of(Language.FRENCH, "Pmt_Déb", new byte[]{(byte) 0xBB, 0x4C}),
        Arguments.of(Language.ENGLISH, "Real", new byte[]{(byte) 0xBB, 0x4D}),
        Arguments.of(Language.FRENCH, "Réel", new byte[]{(byte) 0xBB, 0x4D}),
        Arguments.of(Language.ENGLISH, "re^θi", new byte[]{(byte) 0xBB, 0x4E}),
        Arguments.of(Language.FRENCH, "re^θi", new byte[]{(byte) 0xBB, 0x4E}),
        Arguments.of(Language.ENGLISH, "re^&theta;i", new byte[]{(byte) 0xBB, 0x4E}),
        Arguments.of(Language.FRENCH, "re^&theta;i", new byte[]{(byte) 0xBB, 0x4E}),
        Arguments.of(Language.ENGLISH, "a+bi", new byte[]{(byte) 0xBB, 0x4F}),
        Arguments.of(Language.FRENCH, "a+bi", new byte[]{(byte) 0xBB, 0x4F}),

        // 0xBB 0x5#
        Arguments.of(Language.ENGLISH, "ExprOn", new byte[]{(byte) 0xBB, 0x50}),
        Arguments.of(Language.FRENCH, "ExprAff", new byte[]{(byte) 0xBB, 0x50}),
        Arguments.of(Language.ENGLISH, "ExprOff", new byte[]{(byte) 0xBB, 0x51}),
        Arguments.of(Language.FRENCH, "ExprNAff", new byte[]{(byte) 0xBB, 0x51}),
        Arguments.of(Language.ENGLISH, "ClrAllLists", new byte[]{(byte) 0xBB, 0x52}),
        Arguments.of(Language.FRENCH, "EffToutListes", new byte[]{(byte) 0xBB, 0x52}),
        Arguments.of(Language.ENGLISH, "GetCalc(", new byte[]{(byte) 0xBB, 0x53}),
        Arguments.of(Language.FRENCH, "CaptVar(", new byte[]{(byte) 0xBB, 0x53}),
        Arguments.of(Language.ENGLISH, "DelVar ", new byte[]{(byte) 0xBB, 0x54}),
        Arguments.of(Language.FRENCH, "EffVar ", new byte[]{(byte) 0xBB, 0x54}),
        Arguments.of(Language.ENGLISH, "Equ>String(", new byte[]{(byte) 0xBB, 0x55}),
        Arguments.of(Language.FRENCH, "Equ>Chaîne(", new byte[]{(byte) 0xBB, 0x55}),
        Arguments.of(Language.ENGLISH, "String>Equ(", new byte[]{(byte) 0xBB, 0x56}),
        Arguments.of(Language.FRENCH, "Chaîne>Equ(", new byte[]{(byte) 0xBB, 0x56}),
        Arguments.of(Language.ENGLISH, "Clear Entries", new byte[]{(byte) 0xBB, 0x57}),
        Arguments.of(Language.FRENCH, "Efface entrées", new byte[]{(byte) 0xBB, 0x57}),
        Arguments.of(Language.ENGLISH, "Select(", new byte[]{(byte) 0xBB, 0x58}),
        Arguments.of(Language.FRENCH, "Sélect(", new byte[]{(byte) 0xBB, 0x58}),
        Arguments.of(Language.ENGLISH, "ANOVA(", new byte[]{(byte) 0xBB, 0x59}),
        Arguments.of(Language.FRENCH, "ANUVA(", new byte[]{(byte) 0xBB, 0x59}),
        Arguments.of(Language.ENGLISH, "ModBoxplot", new byte[]{(byte) 0xBB, 0x5A}),
        Arguments.of(Language.FRENCH, "GraphBoitMoust", new byte[]{(byte) 0xBB, 0x5A}),
        Arguments.of(Language.ENGLISH, "NormProbPlot", new byte[]{(byte) 0xBB, 0x5B}),
        Arguments.of(Language.FRENCH, "GraphProbNorm", new byte[]{(byte) 0xBB, 0x5B}),
        // 0xBB 0x5C unused
        // 0xBB 0x5D unused
        // 0xBB 0x5E unused
        // 0xBB 0x5F unused

        // 0xBB 0x6#
        // 0xBB 0x60 unused
        // 0xBB 0x61 unused
        // 0xBB 0x62 unused
        // 0xBB 0x63 unused
        Arguments.of(Language.ENGLISH, "G-T", new byte[]{(byte) 0xBB, 0x64}),
        Arguments.of(Language.FRENCH, "G-T", new byte[]{(byte) 0xBB, 0x64}),
        Arguments.of(Language.ENGLISH, "ZoomFit", new byte[]{(byte) 0xBB, 0x65}),
        Arguments.of(Language.FRENCH, "ZMinMax", new byte[]{(byte) 0xBB, 0x65}),
        Arguments.of(Language.ENGLISH, "DiagnosticOn", new byte[]{(byte) 0xBB, 0x66}),
        Arguments.of(Language.FRENCH, "CorrelAff", new byte[]{(byte) 0xBB, 0x66}),
        Arguments.of(Language.ENGLISH, "DiagnosticOff", new byte[]{(byte) 0xBB, 0x67}),
        Arguments.of(Language.FRENCH, "CorrelNAff", new byte[]{(byte) 0xBB, 0x67}),
        Arguments.of(Language.ENGLISH, "Archive ", new byte[]{(byte) 0xBB, 0x68}),
        Arguments.of(Language.FRENCH, "Archive ", new byte[]{(byte) 0xBB, 0x68}),
        Arguments.of(Language.ENGLISH, "UnArchive ", new byte[]{(byte) 0xBB, 0x69}),
        Arguments.of(Language.FRENCH, "Désarchive ", new byte[]{(byte) 0xBB, 0x69}),
        Arguments.of(Language.ENGLISH, "Asm(", new byte[]{(byte) 0xBB, 0x6A}),
        Arguments.of(Language.FRENCH, "Asm(", new byte[]{(byte) 0xBB, 0x6A}),
        Arguments.of(Language.ENGLISH, "AsmComp(", new byte[]{(byte) 0xBB, 0x6B}),
        Arguments.of(Language.FRENCH, "AsmComp(", new byte[]{(byte) 0xBB, 0x6B}),
        Arguments.of(Language.ENGLISH, "AsmPrgm ", new byte[]{(byte) 0xBB, 0x6C}),
        Arguments.of(Language.FRENCH, "AsmPrgm ", new byte[]{(byte) 0xBB, 0x6C}),
        // 0xBB 0x6D unused
        Arguments.of(Language.ENGLISH, "Á", new byte[]{(byte) 0xBB, 0x6E}),
        Arguments.of(Language.FRENCH, "Á", new byte[]{(byte) 0xBB, 0x6E}),
        Arguments.of(Language.ENGLISH, "&Aacute;", new byte[]{(byte) 0xBB, 0x6E}),
        Arguments.of(Language.FRENCH, "&Aacute;", new byte[]{(byte) 0xBB, 0x6E}),
        Arguments.of(Language.ENGLISH, "À", new byte[]{(byte) 0xBB, 0x6F}),
        Arguments.of(Language.FRENCH, "À", new byte[]{(byte) 0xBB, 0x6F}),
        Arguments.of(Language.ENGLISH, "&Agrave;", new byte[]{(byte) 0xBB, 0x6F}),
        Arguments.of(Language.FRENCH, "&Agrave;", new byte[]{(byte) 0xBB, 0x6F}),

        // 0xBB 0x7#
        Arguments.of(Language.ENGLISH, "Â", new byte[]{(byte) 0xBB, 0x70}),
        Arguments.of(Language.FRENCH, "Â", new byte[]{(byte) 0xBB, 0x70}),
        Arguments.of(Language.ENGLISH, "&Acirc;", new byte[]{(byte) 0xBB, 0x70}),
        Arguments.of(Language.FRENCH, "&Acirc;", new byte[]{(byte) 0xBB, 0x70}),
        Arguments.of(Language.ENGLISH, "Ä", new byte[]{(byte) 0xBB, 0x71}),
        Arguments.of(Language.FRENCH, "Ä", new byte[]{(byte) 0xBB, 0x71}),
        Arguments.of(Language.ENGLISH, "&Adiaeresis;", new byte[]{(byte) 0xBB, 0x71}),
        Arguments.of(Language.FRENCH, "&Adiaeresis;", new byte[]{(byte) 0xBB, 0x71}),
        Arguments.of(Language.ENGLISH, "á", new byte[]{(byte) 0xBB, 0x72}),
        Arguments.of(Language.FRENCH, "á", new byte[]{(byte) 0xBB, 0x72}),
        Arguments.of(Language.ENGLISH, "&aacute;", new byte[]{(byte) 0xBB, 0x72}),
        Arguments.of(Language.FRENCH, "&aacute;", new byte[]{(byte) 0xBB, 0x72}),
        Arguments.of(Language.ENGLISH, "à", new byte[]{(byte) 0xBB, 0x73}),
        Arguments.of(Language.FRENCH, "à", new byte[]{(byte) 0xBB, 0x73}),
        Arguments.of(Language.ENGLISH, "&agrave;", new byte[]{(byte) 0xBB, 0x73}),
        Arguments.of(Language.FRENCH, "&agrave;", new byte[]{(byte) 0xBB, 0x73}),
        Arguments.of(Language.ENGLISH, "â", new byte[]{(byte) 0xBB, 0x74}),
        Arguments.of(Language.FRENCH, "â", new byte[]{(byte) 0xBB, 0x74}),
        Arguments.of(Language.ENGLISH, "&acirc;", new byte[]{(byte) 0xBB, 0x74}),
        Arguments.of(Language.FRENCH, "&acirc;", new byte[]{(byte) 0xBB, 0x74}),
        Arguments.of(Language.ENGLISH, "ä", new byte[]{(byte) 0xBB, 0x75}),
        Arguments.of(Language.FRENCH, "ä", new byte[]{(byte) 0xBB, 0x75}),
        Arguments.of(Language.ENGLISH, "&adiaeresis;", new byte[]{(byte) 0xBB, 0x75}),
        Arguments.of(Language.FRENCH, "&adiaeresis;", new byte[]{(byte) 0xBB, 0x75}),
        Arguments.of(Language.ENGLISH, "É", new byte[]{(byte) 0xBB, 0x76}),
        Arguments.of(Language.FRENCH, "É", new byte[]{(byte) 0xBB, 0x76}),
        Arguments.of(Language.ENGLISH, "&Eacute;", new byte[]{(byte) 0xBB, 0x76}),
        Arguments.of(Language.FRENCH, "&Eacute;", new byte[]{(byte) 0xBB, 0x76}),
        Arguments.of(Language.ENGLISH, "È", new byte[]{(byte) 0xBB, 0x77}),
        Arguments.of(Language.FRENCH, "È", new byte[]{(byte) 0xBB, 0x77}),
        Arguments.of(Language.ENGLISH, "&Egrave;", new byte[]{(byte) 0xBB, 0x77}),
        Arguments.of(Language.FRENCH, "&Egrave;", new byte[]{(byte) 0xBB, 0x77}),
        Arguments.of(Language.ENGLISH, "Ê", new byte[]{(byte) 0xBB, 0x78}),
        Arguments.of(Language.FRENCH, "Ê", new byte[]{(byte) 0xBB, 0x78}),
        Arguments.of(Language.ENGLISH, "&Ecirc;", new byte[]{(byte) 0xBB, 0x78}),
        Arguments.of(Language.FRENCH, "&Ecirc;", new byte[]{(byte) 0xBB, 0x78}),
        Arguments.of(Language.ENGLISH, "Ë", new byte[]{(byte) 0xBB, 0x79}),
        Arguments.of(Language.FRENCH, "Ë", new byte[]{(byte) 0xBB, 0x79}),
        Arguments.of(Language.ENGLISH, "&Ediaeresis;", new byte[]{(byte) 0xBB, 0x79}),
        Arguments.of(Language.FRENCH, "&Ediaeresis;", new byte[]{(byte) 0xBB, 0x79}),
        Arguments.of(Language.ENGLISH, "é", new byte[]{(byte) 0xBB, 0x7A}),
        Arguments.of(Language.FRENCH, "é", new byte[]{(byte) 0xBB, 0x7A}),
        Arguments.of(Language.ENGLISH, "&eacute;", new byte[]{(byte) 0xBB, 0x7A}),
        Arguments.of(Language.FRENCH, "&eacute;", new byte[]{(byte) 0xBB, 0x7A}),
        Arguments.of(Language.ENGLISH, "è", new byte[]{(byte) 0xBB, 0x7B}),
        Arguments.of(Language.FRENCH, "è", new byte[]{(byte) 0xBB, 0x7B}),
        Arguments.of(Language.ENGLISH, "&egrave;", new byte[]{(byte) 0xBB, 0x7B}),
        Arguments.of(Language.FRENCH, "&egrave;", new byte[]{(byte) 0xBB, 0x7B}),
        Arguments.of(Language.ENGLISH, "ê", new byte[]{(byte) 0xBB, 0x7C}),
        Arguments.of(Language.FRENCH, "ê", new byte[]{(byte) 0xBB, 0x7C}),
        Arguments.of(Language.ENGLISH, "&ecirc;", new byte[]{(byte) 0xBB, 0x7C}),
        Arguments.of(Language.FRENCH, "&ecirc;", new byte[]{(byte) 0xBB, 0x7C}),
        Arguments.of(Language.ENGLISH, "ë", new byte[]{(byte) 0xBB, 0x7D}),
        Arguments.of(Language.FRENCH, "ë", new byte[]{(byte) 0xBB, 0x7D}),
        Arguments.of(Language.ENGLISH, "&ediaeresis;", new byte[]{(byte) 0xBB, 0x7D}),
        Arguments.of(Language.FRENCH, "&ediaeresis;", new byte[]{(byte) 0xBB, 0x7D}),
        // 0xBB 0x7E unused
        Arguments.of(Language.ENGLISH, "Ì", new byte[]{(byte) 0xBB, 0x7F}),
        Arguments.of(Language.FRENCH, "Ì", new byte[]{(byte) 0xBB, 0x7F}),
        Arguments.of(Language.ENGLISH, "&Igrave;", new byte[]{(byte) 0xBB, 0x7F}),
        Arguments.of(Language.FRENCH, "&Igrave;", new byte[]{(byte) 0xBB, 0x7F}),

        // 0xBB 0x8#
        Arguments.of(Language.ENGLISH, "Î", new byte[]{(byte) 0xBB, (byte) 0x80}),
        Arguments.of(Language.FRENCH, "Î", new byte[]{(byte) 0xBB, (byte) 0x80}),
        Arguments.of(Language.ENGLISH, "&Icirc;", new byte[]{(byte) 0xBB, (byte) 0x80}),
        Arguments.of(Language.FRENCH, "&Icirc;", new byte[]{(byte) 0xBB, (byte) 0x80}),
        Arguments.of(Language.ENGLISH, "Ï", new byte[]{(byte) 0xBB, (byte) 0x81}),
        Arguments.of(Language.FRENCH, "Ï", new byte[]{(byte) 0xBB, (byte) 0x81}),
        Arguments.of(Language.ENGLISH, "&Idiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x81}),
        Arguments.of(Language.FRENCH, "&Idiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x81}),
        Arguments.of(Language.ENGLISH, "í", new byte[]{(byte) 0xBB, (byte) 0x82}),
        Arguments.of(Language.FRENCH, "í", new byte[]{(byte) 0xBB, (byte) 0x82}),
        Arguments.of(Language.ENGLISH, "&iacute;", new byte[]{(byte) 0xBB, (byte) 0x82}),
        Arguments.of(Language.FRENCH, "&iacute;", new byte[]{(byte) 0xBB, (byte) 0x82}),
        Arguments.of(Language.ENGLISH, "ì", new byte[]{(byte) 0xBB, (byte) 0x83}),
        Arguments.of(Language.FRENCH, "ì", new byte[]{(byte) 0xBB, (byte) 0x83}),
        Arguments.of(Language.ENGLISH, "&igrave;", new byte[]{(byte) 0xBB, (byte) 0x83}),
        Arguments.of(Language.FRENCH, "&igrave;", new byte[]{(byte) 0xBB, (byte) 0x83}),
        Arguments.of(Language.ENGLISH, "î", new byte[]{(byte) 0xBB, (byte) 0x84}),
        Arguments.of(Language.FRENCH, "î", new byte[]{(byte) 0xBB, (byte) 0x84}),
        Arguments.of(Language.ENGLISH, "&icirc;", new byte[]{(byte) 0xBB, (byte) 0x84}),
        Arguments.of(Language.FRENCH, "&icirc;", new byte[]{(byte) 0xBB, (byte) 0x84}),
        Arguments.of(Language.ENGLISH, "ï", new byte[]{(byte) 0xBB, (byte) 0x85}),
        Arguments.of(Language.FRENCH, "ï", new byte[]{(byte) 0xBB, (byte) 0x85}),
        Arguments.of(Language.ENGLISH, "&idiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x85}),
        Arguments.of(Language.FRENCH, "&idiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x85}),
        Arguments.of(Language.ENGLISH, "Ó", new byte[]{(byte) 0xBB, (byte) 0x86}),
        Arguments.of(Language.FRENCH, "Ó", new byte[]{(byte) 0xBB, (byte) 0x86}),
        Arguments.of(Language.ENGLISH, "&Oacute;", new byte[]{(byte) 0xBB, (byte) 0x86}),
        Arguments.of(Language.FRENCH, "&Oacute;", new byte[]{(byte) 0xBB, (byte) 0x86}),
        Arguments.of(Language.ENGLISH, "Ò", new byte[]{(byte) 0xBB, (byte) 0x87}),
        Arguments.of(Language.FRENCH, "Ò", new byte[]{(byte) 0xBB, (byte) 0x87}),
        Arguments.of(Language.ENGLISH, "&Ograve;", new byte[]{(byte) 0xBB, (byte) 0x87}),
        Arguments.of(Language.FRENCH, "&Ograve;", new byte[]{(byte) 0xBB, (byte) 0x87}),
        Arguments.of(Language.ENGLISH, "Ô", new byte[]{(byte) 0xBB, (byte) 0x88}),
        Arguments.of(Language.FRENCH, "Ô", new byte[]{(byte) 0xBB, (byte) 0x88}),
        Arguments.of(Language.ENGLISH, "&Ocirc;", new byte[]{(byte) 0xBB, (byte) 0x88}),
        Arguments.of(Language.FRENCH, "&Ocirc;", new byte[]{(byte) 0xBB, (byte) 0x88}),
        Arguments.of(Language.ENGLISH, "Ö", new byte[]{(byte) 0xBB, (byte) 0x89}),
        Arguments.of(Language.FRENCH, "Ö", new byte[]{(byte) 0xBB, (byte) 0x89}),
        Arguments.of(Language.ENGLISH, "&Odiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x89}),
        Arguments.of(Language.FRENCH, "&Odiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x89}),
        Arguments.of(Language.ENGLISH, "ó", new byte[]{(byte) 0xBB, (byte) 0x8A}),
        Arguments.of(Language.FRENCH, "ó", new byte[]{(byte) 0xBB, (byte) 0x8A}),
        Arguments.of(Language.ENGLISH, "&oacute;", new byte[]{(byte) 0xBB, (byte) 0x8A}),
        Arguments.of(Language.FRENCH, "&oacute;", new byte[]{(byte) 0xBB, (byte) 0x8A}),
        Arguments.of(Language.ENGLISH, "ò", new byte[]{(byte) 0xBB, (byte) 0x8B}),
        Arguments.of(Language.FRENCH, "ò", new byte[]{(byte) 0xBB, (byte) 0x8B}),
        Arguments.of(Language.ENGLISH, "&ograve;", new byte[]{(byte) 0xBB, (byte) 0x8B}),
        Arguments.of(Language.FRENCH, "&ograve;", new byte[]{(byte) 0xBB, (byte) 0x8B}),
        Arguments.of(Language.ENGLISH, "ô", new byte[]{(byte) 0xBB, (byte) 0x8C}),
        Arguments.of(Language.FRENCH, "ô", new byte[]{(byte) 0xBB, (byte) 0x8C}),
        Arguments.of(Language.ENGLISH, "&ocirc;", new byte[]{(byte) 0xBB, (byte) 0x8C}),
        Arguments.of(Language.FRENCH, "&ocirc;", new byte[]{(byte) 0xBB, (byte) 0x8C}),
        Arguments.of(Language.ENGLISH, "ö", new byte[]{(byte) 0xBB, (byte) 0x8D}),
        Arguments.of(Language.FRENCH, "ö", new byte[]{(byte) 0xBB, (byte) 0x8D}),
        Arguments.of(Language.ENGLISH, "&odiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x8D}),
        Arguments.of(Language.FRENCH, "&odiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x8D}),
        Arguments.of(Language.ENGLISH, "Ú", new byte[]{(byte) 0xBB, (byte) 0x8E}),
        Arguments.of(Language.FRENCH, "Ú", new byte[]{(byte) 0xBB, (byte) 0x8E}),
        Arguments.of(Language.ENGLISH, "&Uacute;", new byte[]{(byte) 0xBB, (byte) 0x8E}),
        Arguments.of(Language.FRENCH, "&Uacute;", new byte[]{(byte) 0xBB, (byte) 0x8E}),
        Arguments.of(Language.ENGLISH, "Ù", new byte[]{(byte) 0xBB, (byte) 0x8F}),
        Arguments.of(Language.FRENCH, "Ù", new byte[]{(byte) 0xBB, (byte) 0x8F}),
        Arguments.of(Language.ENGLISH, "&Ugrave;", new byte[]{(byte) 0xBB, (byte) 0x8F}),
        Arguments.of(Language.FRENCH, "&Ugrave;", new byte[]{(byte) 0xBB, (byte) 0x8F}),

        // 0xBB 0x9#
        Arguments.of(Language.ENGLISH, "Û", new byte[]{(byte) 0xBB, (byte) 0x90}),
        Arguments.of(Language.FRENCH, "Û", new byte[]{(byte) 0xBB, (byte) 0x90}),
        Arguments.of(Language.ENGLISH, "&Ucirc;", new byte[]{(byte) 0xBB, (byte) 0x90}),
        Arguments.of(Language.FRENCH, "&Ucirc;", new byte[]{(byte) 0xBB, (byte) 0x90}),
        Arguments.of(Language.ENGLISH, "Ü", new byte[]{(byte) 0xBB, (byte) 0x91}),
        Arguments.of(Language.FRENCH, "Ü", new byte[]{(byte) 0xBB, (byte) 0x91}),
        Arguments.of(Language.ENGLISH, "&Udiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x91}),
        Arguments.of(Language.FRENCH, "&Udiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x91}),
        Arguments.of(Language.ENGLISH, "ú", new byte[]{(byte) 0xBB, (byte) 0x92}),
        Arguments.of(Language.FRENCH, "ú", new byte[]{(byte) 0xBB, (byte) 0x92}),
        Arguments.of(Language.ENGLISH, "&uacute;", new byte[]{(byte) 0xBB, (byte) 0x92}),
        Arguments.of(Language.FRENCH, "&uacute;", new byte[]{(byte) 0xBB, (byte) 0x92}),
        Arguments.of(Language.ENGLISH, "ù", new byte[]{(byte) 0xBB, (byte) 0x93}),
        Arguments.of(Language.FRENCH, "ù", new byte[]{(byte) 0xBB, (byte) 0x93}),
        Arguments.of(Language.ENGLISH, "&ugrave;", new byte[]{(byte) 0xBB, (byte) 0x93}),
        Arguments.of(Language.FRENCH, "&ugrave;", new byte[]{(byte) 0xBB, (byte) 0x93}),
        Arguments.of(Language.ENGLISH, "û", new byte[]{(byte) 0xBB, (byte) 0x94}),
        Arguments.of(Language.FRENCH, "û", new byte[]{(byte) 0xBB, (byte) 0x94}),
        Arguments.of(Language.ENGLISH, "&ucirc;", new byte[]{(byte) 0xBB, (byte) 0x94}),
        Arguments.of(Language.FRENCH, "&ucirc;", new byte[]{(byte) 0xBB, (byte) 0x94}),
        Arguments.of(Language.ENGLISH, "ü", new byte[]{(byte) 0xBB, (byte) 0x95}),
        Arguments.of(Language.FRENCH, "ü", new byte[]{(byte) 0xBB, (byte) 0x95}),
        Arguments.of(Language.ENGLISH, "&udiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x95}),
        Arguments.of(Language.FRENCH, "&udiaeresis;", new byte[]{(byte) 0xBB, (byte) 0x95}),
        Arguments.of(Language.ENGLISH, "Ç", new byte[]{(byte) 0xBB, (byte) 0x96}),
        Arguments.of(Language.FRENCH, "Ç", new byte[]{(byte) 0xBB, (byte) 0x96}),
        Arguments.of(Language.ENGLISH, "&Ccedilla;", new byte[]{(byte) 0xBB, (byte) 0x96}),
        Arguments.of(Language.FRENCH, "&Ccedilla;", new byte[]{(byte) 0xBB, (byte) 0x96}),
        Arguments.of(Language.ENGLISH, "ç", new byte[]{(byte) 0xBB, (byte) 0x97}),
        Arguments.of(Language.FRENCH, "ç", new byte[]{(byte) 0xBB, (byte) 0x97}),
        Arguments.of(Language.ENGLISH, "&ccedilla;", new byte[]{(byte) 0xBB, (byte) 0x97}),
        Arguments.of(Language.FRENCH, "&ccedilla;", new byte[]{(byte) 0xBB, (byte) 0x97}),
        Arguments.of(Language.ENGLISH, "Ñ", new byte[]{(byte) 0xBB, (byte) 0x98}),
        Arguments.of(Language.FRENCH, "Ñ", new byte[]{(byte) 0xBB, (byte) 0x98}),
        Arguments.of(Language.ENGLISH, "&Ntilde;", new byte[]{(byte) 0xBB, (byte) 0x98}),
        Arguments.of(Language.FRENCH, "&Ntilde;", new byte[]{(byte) 0xBB, (byte) 0x98}),
        Arguments.of(Language.ENGLISH, "ñ", new byte[]{(byte) 0xBB, (byte) 0x99}),
        Arguments.of(Language.FRENCH, "ñ", new byte[]{(byte) 0xBB, (byte) 0x99}),
        Arguments.of(Language.ENGLISH, "&ntilde;", new byte[]{(byte) 0xBB, (byte) 0x99}),
        Arguments.of(Language.FRENCH, "&ntilde;", new byte[]{(byte) 0xBB, (byte) 0x99}),
        Arguments.of(Language.ENGLISH, "´", new byte[]{(byte) 0xBB, (byte) 0x9A}),
        Arguments.of(Language.FRENCH, "´", new byte[]{(byte) 0xBB, (byte) 0x9A}),
        Arguments.of(Language.ENGLISH, "&acute;", new byte[]{(byte) 0xBB, (byte) 0x9A}),
        Arguments.of(Language.FRENCH, "&acute;", new byte[]{(byte) 0xBB, (byte) 0x9A}),
        Arguments.of(Language.ENGLISH, "`", new byte[]{(byte) 0xBB, (byte) 0x9B}),
        Arguments.of(Language.FRENCH, "`", new byte[]{(byte) 0xBB, (byte) 0x9B}),
        Arguments.of(Language.ENGLISH, "&grave;", new byte[]{(byte) 0xBB, (byte) 0x9B}),
        Arguments.of(Language.FRENCH, "&grave;", new byte[]{(byte) 0xBB, (byte) 0x9B}),
        Arguments.of(Language.ENGLISH, "¨", new byte[]{(byte) 0xBB, (byte) 0x9C}),
        Arguments.of(Language.FRENCH, "¨", new byte[]{(byte) 0xBB, (byte) 0x9C}),
        Arguments.of(Language.ENGLISH, "&diaeresis;", new byte[]{(byte) 0xBB, (byte) 0x9C}),
        Arguments.of(Language.FRENCH, "&diaeresis;", new byte[]{(byte) 0xBB, (byte) 0x9C}),
        Arguments.of(Language.ENGLISH, "¿", new byte[]{(byte) 0xBB, (byte) 0x9D}),
        Arguments.of(Language.FRENCH, "¿", new byte[]{(byte) 0xBB, (byte) 0x9D}),
        Arguments.of(Language.ENGLISH, "&invertedqmark;", new byte[]{(byte) 0xBB, (byte) 0x9D}),
        Arguments.of(Language.FRENCH, "&invertedqmark;", new byte[]{(byte) 0xBB, (byte) 0x9D}),
        Arguments.of(Language.ENGLISH, "¡", new byte[]{(byte) 0xBB, (byte) 0x9E}),
        Arguments.of(Language.FRENCH, "¡", new byte[]{(byte) 0xBB, (byte) 0x9E}),
        Arguments.of(Language.ENGLISH, "&invertedexclp;", new byte[]{(byte) 0xBB, (byte) 0x9E}),
        Arguments.of(Language.FRENCH, "&invertedexclp;", new byte[]{(byte) 0xBB, (byte) 0x9E}),
        Arguments.of(Language.ENGLISH, "α", new byte[]{(byte) 0xBB, (byte) 0x9F}),
        Arguments.of(Language.FRENCH, "α", new byte[]{(byte) 0xBB, (byte) 0x9F}),
        Arguments.of(Language.ENGLISH, "&alpha;", new byte[]{(byte) 0xBB, (byte) 0x9F}),
        Arguments.of(Language.FRENCH, "&alpha;", new byte[]{(byte) 0xBB, (byte) 0x9F}),

        // 0xBB 0xA#
        Arguments.of(Language.ENGLISH, "β", new byte[]{(byte) 0xBB, (byte) 0xA0}),
        Arguments.of(Language.FRENCH, "β", new byte[]{(byte) 0xBB, (byte) 0xA0}),
        Arguments.of(Language.ENGLISH, "&beta;", new byte[]{(byte) 0xBB, (byte) 0xA0}),
        Arguments.of(Language.FRENCH, "&beta;", new byte[]{(byte) 0xBB, (byte) 0xA0}),
        Arguments.of(Language.ENGLISH, "γ", new byte[]{(byte) 0xBB, (byte) 0xA1}),
        Arguments.of(Language.FRENCH, "γ", new byte[]{(byte) 0xBB, (byte) 0xA1}),
        Arguments.of(Language.ENGLISH, "&gamma;", new byte[]{(byte) 0xBB, (byte) 0xA1}),
        Arguments.of(Language.FRENCH, "&gamma;", new byte[]{(byte) 0xBB, (byte) 0xA1}),
        Arguments.of(Language.ENGLISH, "Δ", new byte[]{(byte) 0xBB, (byte) 0xA2}),
        Arguments.of(Language.FRENCH, "Δ", new byte[]{(byte) 0xBB, (byte) 0xA2}),
        Arguments.of(Language.ENGLISH, "&Delta;", new byte[]{(byte) 0xBB, (byte) 0xA2}),
        Arguments.of(Language.FRENCH, "&Delta;", new byte[]{(byte) 0xBB, (byte) 0xA2}),
        Arguments.of(Language.ENGLISH, "δ", new byte[]{(byte) 0xBB, (byte) 0xA3}),
        Arguments.of(Language.FRENCH, "δ", new byte[]{(byte) 0xBB, (byte) 0xA3}),
        Arguments.of(Language.ENGLISH, "&delta;", new byte[]{(byte) 0xBB, (byte) 0xA3}),
        Arguments.of(Language.FRENCH, "&delta;", new byte[]{(byte) 0xBB, (byte) 0xA3}),
        Arguments.of(Language.ENGLISH, "ε", new byte[]{(byte) 0xBB, (byte) 0xA4}),
        Arguments.of(Language.FRENCH, "ε", new byte[]{(byte) 0xBB, (byte) 0xA4}),
        Arguments.of(Language.ENGLISH, "&epsilon;", new byte[]{(byte) 0xBB, (byte) 0xA4}),
        Arguments.of(Language.FRENCH, "&epsilon;", new byte[]{(byte) 0xBB, (byte) 0xA4}),
        Arguments.of(Language.ENGLISH, "λ", new byte[]{(byte) 0xBB, (byte) 0xA5}),
        Arguments.of(Language.FRENCH, "λ", new byte[]{(byte) 0xBB, (byte) 0xA5}),
        Arguments.of(Language.ENGLISH, "&lambda;", new byte[]{(byte) 0xBB, (byte) 0xA5}),
        Arguments.of(Language.FRENCH, "&lambda;", new byte[]{(byte) 0xBB, (byte) 0xA5}),
        Arguments.of(Language.ENGLISH, "μ", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.FRENCH, "μ", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.ENGLISH, "&mu;", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.FRENCH, "&mu;", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.ENGLISH, "µ", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.FRENCH, "µ", new byte[]{(byte) 0xBB, (byte) 0xA6}),
        Arguments.of(Language.ENGLISH, "&letterpi;", new byte[]{(byte) 0xBB, (byte) 0xA7}),
        Arguments.of(Language.FRENCH, "&letterpi;", new byte[]{(byte) 0xBB, (byte) 0xA7}),
        Arguments.of(Language.ENGLISH, "ρ", new byte[]{(byte) 0xBB, (byte) 0xA8}),
        Arguments.of(Language.FRENCH, "ρ", new byte[]{(byte) 0xBB, (byte) 0xA8}),
        Arguments.of(Language.ENGLISH, "&rho;", new byte[]{(byte) 0xBB, (byte) 0xA8}),
        Arguments.of(Language.FRENCH, "&rho;", new byte[]{(byte) 0xBB, (byte) 0xA8}),
        Arguments.of(Language.ENGLISH, "Σ", new byte[]{(byte) 0xBB, (byte) 0xA9}),
        Arguments.of(Language.FRENCH, "Σ", new byte[]{(byte) 0xBB, (byte) 0xA9}),
        Arguments.of(Language.ENGLISH, "&Sigma;", new byte[]{(byte) 0xBB, (byte) 0xA9}),
        Arguments.of(Language.FRENCH, "&Sigma;", new byte[]{(byte) 0xBB, (byte) 0xA9}),
        // 0xBB 0xAA unused
        Arguments.of(Language.ENGLISH, "φ", new byte[]{(byte) 0xBB, (byte) 0xAB}),
        Arguments.of(Language.FRENCH, "φ", new byte[]{(byte) 0xBB, (byte) 0xAB}),
        Arguments.of(Language.ENGLISH, "&phi;", new byte[]{(byte) 0xBB, (byte) 0xAB}),
        Arguments.of(Language.FRENCH, "&phi;", new byte[]{(byte) 0xBB, (byte) 0xAB}),
        Arguments.of(Language.ENGLISH, "Ω", new byte[]{(byte) 0xBB, (byte) 0xAC}),
        Arguments.of(Language.FRENCH, "Ω", new byte[]{(byte) 0xBB, (byte) 0xAC}),
        Arguments.of(Language.ENGLISH, "&Omega;", new byte[]{(byte) 0xBB, (byte) 0xAC}),
        Arguments.of(Language.FRENCH, "&Omega;", new byte[]{(byte) 0xBB, (byte) 0xAC}),
        Arguments.of(Language.ENGLISH, "&letterpcirc;", new byte[]{(byte) 0xBB, (byte) 0xAD}),
        Arguments.of(Language.FRENCH, "&letterpcirc;", new byte[]{(byte) 0xBB, (byte) 0xAD}),
        Arguments.of(Language.ENGLISH, "χ", new byte[]{(byte) 0xBB, (byte) 0xAE}),
        Arguments.of(Language.FRENCH, "χ", new byte[]{(byte) 0xBB, (byte) 0xAE}),
        Arguments.of(Language.ENGLISH, "&chi;", new byte[]{(byte) 0xBB, (byte) 0xAE}),
        Arguments.of(Language.FRENCH, "&chi;", new byte[]{(byte) 0xBB, (byte) 0xAE}),
        Arguments.of(Language.ENGLISH, "&letterF;", new byte[]{(byte) 0xBB, (byte) 0xAF}),
        Arguments.of(Language.FRENCH, "&letterF;", new byte[]{(byte) 0xBB, (byte) 0xAF}),

        // 0xBB 0xB#
        Arguments.of(Language.ENGLISH, "a", new byte[]{(byte) 0xBB, (byte) 0xB0}),
        Arguments.of(Language.FRENCH, "a", new byte[]{(byte) 0xBB, (byte) 0xB0}),
        Arguments.of(Language.ENGLISH, "b", new byte[]{(byte) 0xBB, (byte) 0xB1}),
        Arguments.of(Language.FRENCH, "b", new byte[]{(byte) 0xBB, (byte) 0xB1}),
        Arguments.of(Language.ENGLISH, "c", new byte[]{(byte) 0xBB, (byte) 0xB2}),
        Arguments.of(Language.FRENCH, "c", new byte[]{(byte) 0xBB, (byte) 0xB2}),
        Arguments.of(Language.ENGLISH, "d", new byte[]{(byte) 0xBB, (byte) 0xB3}),
        Arguments.of(Language.FRENCH, "d", new byte[]{(byte) 0xBB, (byte) 0xB3}),
        Arguments.of(Language.ENGLISH, "e", new byte[]{(byte) 0xBB, (byte) 0xB4}),
        Arguments.of(Language.FRENCH, "e", new byte[]{(byte) 0xBB, (byte) 0xB4}),
        Arguments.of(Language.ENGLISH, "f", new byte[]{(byte) 0xBB, (byte) 0xB5}),
        Arguments.of(Language.FRENCH, "f", new byte[]{(byte) 0xBB, (byte) 0xB5}),
        Arguments.of(Language.ENGLISH, "g", new byte[]{(byte) 0xBB, (byte) 0xB6}),
        Arguments.of(Language.FRENCH, "g", new byte[]{(byte) 0xBB, (byte) 0xB6}),
        Arguments.of(Language.ENGLISH, "h", new byte[]{(byte) 0xBB, (byte) 0xB7}),
        Arguments.of(Language.FRENCH, "h", new byte[]{(byte) 0xBB, (byte) 0xB7}),
        Arguments.of(Language.ENGLISH, "i", new byte[]{(byte) 0xBB, (byte) 0xB8}),
        Arguments.of(Language.FRENCH, "i", new byte[]{(byte) 0xBB, (byte) 0xB8}),
        Arguments.of(Language.ENGLISH, "j", new byte[]{(byte) 0xBB, (byte) 0xB9}),
        Arguments.of(Language.FRENCH, "j", new byte[]{(byte) 0xBB, (byte) 0xB9}),
        Arguments.of(Language.ENGLISH, "k", new byte[]{(byte) 0xBB, (byte) 0xBA}),
        Arguments.of(Language.FRENCH, "k", new byte[]{(byte) 0xBB, (byte) 0xBA}),
        // 0xBB 0xBB unused
        Arguments.of(Language.ENGLISH, "l", new byte[]{(byte) 0xBB, (byte) 0xBC}),
        Arguments.of(Language.FRENCH, "l", new byte[]{(byte) 0xBB, (byte) 0xBC}),
        Arguments.of(Language.ENGLISH, "m", new byte[]{(byte) 0xBB, (byte) 0xBD}),
        Arguments.of(Language.FRENCH, "m", new byte[]{(byte) 0xBB, (byte) 0xBD}),
        Arguments.of(Language.ENGLISH, "n", new byte[]{(byte) 0xBB, (byte) 0xBE}),
        Arguments.of(Language.FRENCH, "n", new byte[]{(byte) 0xBB, (byte) 0xBE}),
        Arguments.of(Language.ENGLISH, "o", new byte[]{(byte) 0xBB, (byte) 0xBF}),
        Arguments.of(Language.FRENCH, "o", new byte[]{(byte) 0xBB, (byte) 0xBF}),

        // 0xBB 0xC#
        Arguments.of(Language.ENGLISH, "p", new byte[]{(byte) 0xBB, (byte) 0xC0}),
        Arguments.of(Language.FRENCH, "p", new byte[]{(byte) 0xBB, (byte) 0xC0}),
        Arguments.of(Language.ENGLISH, "q", new byte[]{(byte) 0xBB, (byte) 0xC1}),
        Arguments.of(Language.FRENCH, "q", new byte[]{(byte) 0xBB, (byte) 0xC1}),
        Arguments.of(Language.ENGLISH, "r", new byte[]{(byte) 0xBB, (byte) 0xC2}),
        Arguments.of(Language.FRENCH, "r", new byte[]{(byte) 0xBB, (byte) 0xC2}),
        Arguments.of(Language.ENGLISH, "s", new byte[]{(byte) 0xBB, (byte) 0xC3}),
        Arguments.of(Language.FRENCH, "s", new byte[]{(byte) 0xBB, (byte) 0xC3}),
        Arguments.of(Language.ENGLISH, "t", new byte[]{(byte) 0xBB, (byte) 0xC4}),
        Arguments.of(Language.FRENCH, "t", new byte[]{(byte) 0xBB, (byte) 0xC4}),
        Arguments.of(Language.ENGLISH, "u", new byte[]{(byte) 0xBB, (byte) 0xC5}),
        Arguments.of(Language.FRENCH, "u", new byte[]{(byte) 0xBB, (byte) 0xC5}),
        Arguments.of(Language.ENGLISH, "v", new byte[]{(byte) 0xBB, (byte) 0xC6}),
        Arguments.of(Language.FRENCH, "v", new byte[]{(byte) 0xBB, (byte) 0xC6}),
        Arguments.of(Language.ENGLISH, "w", new byte[]{(byte) 0xBB, (byte) 0xC7}),
        Arguments.of(Language.FRENCH, "w", new byte[]{(byte) 0xBB, (byte) 0xC7}),
        Arguments.of(Language.ENGLISH, "x", new byte[]{(byte) 0xBB, (byte) 0xC8}),
        Arguments.of(Language.FRENCH, "x", new byte[]{(byte) 0xBB, (byte) 0xC8}),
        Arguments.of(Language.ENGLISH, "y", new byte[]{(byte) 0xBB, (byte) 0xC9}),
        Arguments.of(Language.FRENCH, "y", new byte[]{(byte) 0xBB, (byte) 0xC9}),
        Arguments.of(Language.ENGLISH, "z", new byte[]{(byte) 0xBB, (byte) 0xCA}),
        Arguments.of(Language.FRENCH, "z", new byte[]{(byte) 0xBB, (byte) 0xCA}),
        Arguments.of(Language.ENGLISH, "σ", new byte[]{(byte) 0xBB, (byte) 0xCB}),
        Arguments.of(Language.FRENCH, "σ", new byte[]{(byte) 0xBB, (byte) 0xCB}),
        Arguments.of(Language.ENGLISH, "&sigma;", new byte[]{(byte) 0xBB, (byte) 0xCB}),
        Arguments.of(Language.FRENCH, "&sigma;", new byte[]{(byte) 0xBB, (byte) 0xCB}),
        Arguments.of(Language.ENGLISH, "τ", new byte[]{(byte) 0xBB, (byte) 0xCC}),
        Arguments.of(Language.FRENCH, "τ", new byte[]{(byte) 0xBB, (byte) 0xCC}),
        Arguments.of(Language.ENGLISH, "&tau;", new byte[]{(byte) 0xBB, (byte) 0xCC}),
        Arguments.of(Language.FRENCH, "&tau;", new byte[]{(byte) 0xBB, (byte) 0xCC}),
        Arguments.of(Language.ENGLISH, "Í", new byte[]{(byte) 0xBB, (byte) 0xCD}),
        Arguments.of(Language.FRENCH, "Í", new byte[]{(byte) 0xBB, (byte) 0xCD}),
        Arguments.of(Language.ENGLISH, "&Iacute;", new byte[]{(byte) 0xBB, (byte) 0xCD}),
        Arguments.of(Language.FRENCH, "&Iacute;", new byte[]{(byte) 0xBB, (byte) 0xCD}),
        Arguments.of(Language.ENGLISH, "GarbageCollect", new byte[]{(byte) 0xBB, (byte) 0xCE}),
        Arguments.of(Language.FRENCH, "RéorganiserMém", new byte[]{(byte) 0xBB, (byte) 0xCE}),
        Arguments.of(Language.ENGLISH, "~", new byte[]{(byte) 0xBB, (byte) 0xCF}),
        Arguments.of(Language.FRENCH, "~", new byte[]{(byte) 0xBB, (byte) 0xCF}),

        // 0xBB 0xD#
        // 0xBB 0xD0 reserved
        Arguments.of(Language.ENGLISH, "@", new byte[]{(byte) 0xBB, (byte) 0xD1}),
        Arguments.of(Language.FRENCH, "@", new byte[]{(byte) 0xBB, (byte) 0xD1}),
        Arguments.of(Language.ENGLISH, "\\#", new byte[]{(byte) 0xBB, (byte) 0xD2}),
        Arguments.of(Language.FRENCH, "\\#", new byte[]{(byte) 0xBB, (byte) 0xD2}),
        Arguments.of(Language.ENGLISH, "$", new byte[]{(byte) 0xBB, (byte) 0xD3}),
        Arguments.of(Language.FRENCH, "$", new byte[]{(byte) 0xBB, (byte) 0xD3}),
        Arguments.of(Language.ENGLISH, "&amp;", new byte[]{(byte) 0xBB, (byte) 0xD4}),
        Arguments.of(Language.FRENCH, "&amp;", new byte[]{(byte) 0xBB, (byte) 0xD4}),
        Arguments.of(Language.ENGLISH, "&grave2;", new byte[]{(byte) 0xBB, (byte) 0xD5}),
        Arguments.of(Language.FRENCH, "&grave2;", new byte[]{(byte) 0xBB, (byte) 0xD5}),
        Arguments.of(Language.ENGLISH, ";", new byte[]{(byte) 0xBB, (byte) 0xD6}),
        Arguments.of(Language.FRENCH, ";", new byte[]{(byte) 0xBB, (byte) 0xD6}),
        Arguments.of(Language.ENGLISH, "\\\\", new byte[]{(byte) 0xBB, (byte) 0xD7}),
        Arguments.of(Language.FRENCH, "\\\\", new byte[]{(byte) 0xBB, (byte) 0xD7}),
        Arguments.of(Language.ENGLISH, "|", new byte[]{(byte) 0xBB, (byte) 0xD8}),
        Arguments.of(Language.FRENCH, "|", new byte[]{(byte) 0xBB, (byte) 0xD8}),
        Arguments.of(Language.ENGLISH, "_", new byte[]{(byte) 0xBB, (byte) 0xD9}),
        Arguments.of(Language.FRENCH, "_", new byte[]{(byte) 0xBB, (byte) 0xD9}),
        Arguments.of(Language.ENGLISH, "%", new byte[]{(byte) 0xBB, (byte) 0xDA}),
        Arguments.of(Language.FRENCH, "%", new byte[]{(byte) 0xBB, (byte) 0xDA}),
        Arguments.of(Language.ENGLISH, "…", new byte[]{(byte) 0xBB, (byte) 0xDB}),
        Arguments.of(Language.FRENCH, "…", new byte[]{(byte) 0xBB, (byte) 0xDB}),
        Arguments.of(Language.ENGLISH, "∠", new byte[]{(byte) 0xBB, (byte) 0xDC}),
        Arguments.of(Language.FRENCH, "∠", new byte[]{(byte) 0xBB, (byte) 0xDC}),
        Arguments.of(Language.ENGLISH, "&angle;", new byte[]{(byte) 0xBB, (byte) 0xDC}),
        Arguments.of(Language.FRENCH, "&angle;", new byte[]{(byte) 0xBB, (byte) 0xDC}),
        Arguments.of(Language.ENGLISH, "ß", new byte[]{(byte) 0xBB, (byte) 0xDD}),
        Arguments.of(Language.FRENCH, "ß", new byte[]{(byte) 0xBB, (byte) 0xDD}),
        Arguments.of(Language.ENGLISH, "&ss;", new byte[]{(byte) 0xBB, (byte) 0xDD}),
        Arguments.of(Language.FRENCH, "&ss;", new byte[]{(byte) 0xBB, (byte) 0xDD}),
        Arguments.of(Language.ENGLISH, "&xexpon;", new byte[]{(byte) 0xBB, (byte) 0xDE}),
        Arguments.of(Language.FRENCH, "&xexpon;", new byte[]{(byte) 0xBB, (byte) 0xDE}),
        Arguments.of(Language.ENGLISH, "&T_;", new byte[]{(byte) 0xBB, (byte) 0xDF}),
        Arguments.of(Language.FRENCH, "&T_;", new byte[]{(byte) 0xBB, (byte) 0xDF}),

        // 0xBB 0xE#
        Arguments.of(Language.ENGLISH, "₀", new byte[]{(byte) 0xBB, (byte) 0xE0}),
        Arguments.of(Language.FRENCH, "₀", new byte[]{(byte) 0xBB, (byte) 0xE0}),
        Arguments.of(Language.ENGLISH, "&sub0;", new byte[]{(byte) 0xBB, (byte) 0xE0}),
        Arguments.of(Language.FRENCH, "&sub0;", new byte[]{(byte) 0xBB, (byte) 0xE0}),
        Arguments.of(Language.ENGLISH, "₁", new byte[]{(byte) 0xBB, (byte) 0xE1}),
        Arguments.of(Language.FRENCH, "₁", new byte[]{(byte) 0xBB, (byte) 0xE1}),
        Arguments.of(Language.ENGLISH, "&sub1;", new byte[]{(byte) 0xBB, (byte) 0xE1}),
        Arguments.of(Language.FRENCH, "&sub1;", new byte[]{(byte) 0xBB, (byte) 0xE1}),
        Arguments.of(Language.ENGLISH, "₂", new byte[]{(byte) 0xBB, (byte) 0xE2}),
        Arguments.of(Language.FRENCH, "₂", new byte[]{(byte) 0xBB, (byte) 0xE2}),
        Arguments.of(Language.ENGLISH, "&sub2;", new byte[]{(byte) 0xBB, (byte) 0xE2}),
        Arguments.of(Language.FRENCH, "&sub2;", new byte[]{(byte) 0xBB, (byte) 0xE2}),
        Arguments.of(Language.ENGLISH, "₃", new byte[]{(byte) 0xBB, (byte) 0xE3}),
        Arguments.of(Language.FRENCH, "₃", new byte[]{(byte) 0xBB, (byte) 0xE3}),
        Arguments.of(Language.ENGLISH, "&sub3;", new byte[]{(byte) 0xBB, (byte) 0xE3}),
        Arguments.of(Language.FRENCH, "&sub3;", new byte[]{(byte) 0xBB, (byte) 0xE3}),
        Arguments.of(Language.ENGLISH, "₄", new byte[]{(byte) 0xBB, (byte) 0xE4}),
        Arguments.of(Language.FRENCH, "₄", new byte[]{(byte) 0xBB, (byte) 0xE4}),
        Arguments.of(Language.ENGLISH, "&sub4;", new byte[]{(byte) 0xBB, (byte) 0xE4}),
        Arguments.of(Language.FRENCH, "&sub4;", new byte[]{(byte) 0xBB, (byte) 0xE4}),
        Arguments.of(Language.ENGLISH, "₅", new byte[]{(byte) 0xBB, (byte) 0xE5}),
        Arguments.of(Language.FRENCH, "₅", new byte[]{(byte) 0xBB, (byte) 0xE5}),
        Arguments.of(Language.ENGLISH, "&sub5;", new byte[]{(byte) 0xBB, (byte) 0xE5}),
        Arguments.of(Language.FRENCH, "&sub5;", new byte[]{(byte) 0xBB, (byte) 0xE5}),
        Arguments.of(Language.ENGLISH, "₆", new byte[]{(byte) 0xBB, (byte) 0xE6}),
        Arguments.of(Language.FRENCH, "₆", new byte[]{(byte) 0xBB, (byte) 0xE6}),
        Arguments.of(Language.ENGLISH, "&sub6;", new byte[]{(byte) 0xBB, (byte) 0xE6}),
        Arguments.of(Language.FRENCH, "&sub6;", new byte[]{(byte) 0xBB, (byte) 0xE6}),
        Arguments.of(Language.ENGLISH, "₇", new byte[]{(byte) 0xBB, (byte) 0xE7}),
        Arguments.of(Language.FRENCH, "₇", new byte[]{(byte) 0xBB, (byte) 0xE7}),
        Arguments.of(Language.ENGLISH, "&sub7;", new byte[]{(byte) 0xBB, (byte) 0xE7}),
        Arguments.of(Language.FRENCH, "&sub7;", new byte[]{(byte) 0xBB, (byte) 0xE7}),
        Arguments.of(Language.ENGLISH, "₈", new byte[]{(byte) 0xBB, (byte) 0xE8}),
        Arguments.of(Language.FRENCH, "₈", new byte[]{(byte) 0xBB, (byte) 0xE8}),
        Arguments.of(Language.ENGLISH, "&sub8;", new byte[]{(byte) 0xBB, (byte) 0xE8}),
        Arguments.of(Language.FRENCH, "&sub8;", new byte[]{(byte) 0xBB, (byte) 0xE8}),
        Arguments.of(Language.ENGLISH, "₉", new byte[]{(byte) 0xBB, (byte) 0xE9}),
        Arguments.of(Language.FRENCH, "₉", new byte[]{(byte) 0xBB, (byte) 0xE9}),
        Arguments.of(Language.ENGLISH, "&sub9;", new byte[]{(byte) 0xBB, (byte) 0xE9}),
        Arguments.of(Language.FRENCH, "&sub9;", new byte[]{(byte) 0xBB, (byte) 0xE9}),
        Arguments.of(Language.ENGLISH, "₁₀", new byte[]{(byte) 0xBB, (byte) 0xEA}),
        Arguments.of(Language.FRENCH, "₁₀", new byte[]{(byte) 0xBB, (byte) 0xEA}),
        Arguments.of(Language.ENGLISH, "&sub10;", new byte[]{(byte) 0xBB, (byte) 0xEA}),
        Arguments.of(Language.FRENCH, "&sub10;", new byte[]{(byte) 0xBB, (byte) 0xEA}),
        Arguments.of(Language.ENGLISH, "←", new byte[]{(byte) 0xBB, (byte) 0xEB}),
        Arguments.of(Language.FRENCH, "←", new byte[]{(byte) 0xBB, (byte) 0xEB}),
        Arguments.of(Language.ENGLISH, "&larrow;", new byte[]{(byte) 0xBB, (byte) 0xEB}),
        Arguments.of(Language.FRENCH, "&larrow;", new byte[]{(byte) 0xBB, (byte) 0xEB}),
        Arguments.of(Language.ENGLISH, "→", new byte[]{(byte) 0xBB, (byte) 0xEC}),
        Arguments.of(Language.FRENCH, "→", new byte[]{(byte) 0xBB, (byte) 0xEC}),
        Arguments.of(Language.ENGLISH, "&rarrow;", new byte[]{(byte) 0xBB, (byte) 0xEC}),
        Arguments.of(Language.FRENCH, "&rarrow;", new byte[]{(byte) 0xBB, (byte) 0xEC}),
        Arguments.of(Language.ENGLISH, "↑", new byte[]{(byte) 0xBB, (byte) 0xED}),
        Arguments.of(Language.FRENCH, "↑", new byte[]{(byte) 0xBB, (byte) 0xED}),
        Arguments.of(Language.ENGLISH, "&uarrow;", new byte[]{(byte) 0xBB, (byte) 0xED}),
        Arguments.of(Language.FRENCH, "&uarrow;", new byte[]{(byte) 0xBB, (byte) 0xED}),
        Arguments.of(Language.ENGLISH, "↓", new byte[]{(byte) 0xBB, (byte) 0xEE}),
        Arguments.of(Language.FRENCH, "↓", new byte[]{(byte) 0xBB, (byte) 0xEE}),
        Arguments.of(Language.ENGLISH, "&darrow;", new byte[]{(byte) 0xBB, (byte) 0xEE}),
        Arguments.of(Language.FRENCH, "&darrow;", new byte[]{(byte) 0xBB, (byte) 0xEE}),
        // 0xBB 0xEF unused

        // 0xBB 0xF#
        Arguments.of(Language.ENGLISH, "×", new byte[]{(byte) 0xBB, (byte) 0xF0}),
        Arguments.of(Language.FRENCH, "×", new byte[]{(byte) 0xBB, (byte) 0xF0}),
        Arguments.of(Language.ENGLISH, "&times;", new byte[]{(byte) 0xBB, (byte) 0xF0}),
        Arguments.of(Language.FRENCH, "&times;", new byte[]{(byte) 0xBB, (byte) 0xF0}),
        Arguments.of(Language.ENGLISH, "∫", new byte[]{(byte) 0xBB, (byte) 0xF1}),
        Arguments.of(Language.FRENCH, "∫", new byte[]{(byte) 0xBB, (byte) 0xF1}),
        Arguments.of(Language.ENGLISH, "&int;", new byte[]{(byte) 0xBB, (byte) 0xF1}),
        Arguments.of(Language.FRENCH, "&int;", new byte[]{(byte) 0xBB, (byte) 0xF1}),
        Arguments.of(Language.ENGLISH, "⬆", new byte[]{(byte) 0xBB, (byte) 0xF2}),
        Arguments.of(Language.FRENCH, "⬆", new byte[]{(byte) 0xBB, (byte) 0xF2}),
        Arguments.of(Language.ENGLISH, "&buarrow;", new byte[]{(byte) 0xBB, (byte) 0xF2}),
        Arguments.of(Language.FRENCH, "&buarrow;", new byte[]{(byte) 0xBB, (byte) 0xF2}),
        Arguments.of(Language.ENGLISH, "⬇", new byte[]{(byte) 0xBB, (byte) 0xF3}),
        Arguments.of(Language.FRENCH, "⬇", new byte[]{(byte) 0xBB, (byte) 0xF3}),
        Arguments.of(Language.ENGLISH, "&bdarrow;", new byte[]{(byte) 0xBB, (byte) 0xF3}),
        Arguments.of(Language.FRENCH, "&bdarrow;", new byte[]{(byte) 0xBB, (byte) 0xF3}),
        Arguments.of(Language.ENGLISH, "√", new byte[]{(byte) 0xBB, (byte) 0xF4}),
        Arguments.of(Language.FRENCH, "√", new byte[]{(byte) 0xBB, (byte) 0xF4}),
        Arguments.of(Language.ENGLISH, "&sqrt;", new byte[]{(byte) 0xBB, (byte) 0xF4}),
        Arguments.of(Language.FRENCH, "&sqrt;", new byte[]{(byte) 0xBB, (byte) 0xF4}),
        Arguments.of(Language.ENGLISH, "&invertedequal;", new byte[]{(byte) 0xBB, (byte) 0xF5}),
        Arguments.of(Language.FRENCH, "&invertedequal;", new byte[]{(byte) 0xBB, (byte) 0xF5}),
        // 0xBB 0xF6 to 0xBB 0xFF unused

        // 0xB#
        Arguments.of(Language.ENGLISH, "√(", new byte[]{(byte) 0xBC}),
        Arguments.of(Language.FRENCH, "√(", new byte[]{(byte) 0xBC}),
        Arguments.of(Language.ENGLISH, "&sqrt;(", new byte[]{(byte) 0xBC}),
        Arguments.of(Language.FRENCH, "&sqrt;(", new byte[]{(byte) 0xBC}),
        Arguments.of(Language.ENGLISH, "∛(", new byte[]{(byte) 0xBD}),
        Arguments.of(Language.FRENCH, "∛(", new byte[]{(byte) 0xBD}),
        Arguments.of(Language.ENGLISH, "&cbrt;(", new byte[]{(byte) 0xBD}),
        Arguments.of(Language.FRENCH, "&cbrt;(", new byte[]{(byte) 0xBD}),
        Arguments.of(Language.ENGLISH, "ln(", new byte[]{(byte) 0xBE}),
        Arguments.of(Language.FRENCH, "ln(", new byte[]{(byte) 0xBE}),
        Arguments.of(Language.ENGLISH, "e^(", new byte[]{(byte) 0xBF}),
        Arguments.of(Language.FRENCH, "e^(", new byte[]{(byte) 0xBF}),

        // 0xC#
        Arguments.of(Language.ENGLISH, "log(", new byte[]{(byte) 0xC0}),
        Arguments.of(Language.FRENCH, "log(", new byte[]{(byte) 0xC0}),
        Arguments.of(Language.ENGLISH, "10^(", new byte[]{(byte) 0xC1}),
        Arguments.of(Language.FRENCH, "10^(", new byte[]{(byte) 0xC1}),
        Arguments.of(Language.ENGLISH, "sin(", new byte[]{(byte) 0xC2}),
        Arguments.of(Language.FRENCH, "sin(", new byte[]{(byte) 0xC2}),
        Arguments.of(Language.ENGLISH, "sin-1(", new byte[]{(byte) 0xC3}),
        Arguments.of(Language.FRENCH, "Arcsin(", new byte[]{(byte) 0xC3}),
        Arguments.of(Language.ENGLISH, "cos(", new byte[]{(byte) 0xC4}),
        Arguments.of(Language.FRENCH, "cos(", new byte[]{(byte) 0xC4}),
        Arguments.of(Language.ENGLISH, "cos-1(", new byte[]{(byte) 0xC5}),
        Arguments.of(Language.FRENCH, "Arccos(", new byte[]{(byte) 0xC5}),
        Arguments.of(Language.ENGLISH, "tan(", new byte[]{(byte) 0xC6}),
        Arguments.of(Language.FRENCH, "tan(", new byte[]{(byte) 0xC6}),
        Arguments.of(Language.ENGLISH, "tan-1(", new byte[]{(byte) 0xC7}),
        Arguments.of(Language.FRENCH, "Arctan(", new byte[]{(byte) 0xC7}),
        Arguments.of(Language.ENGLISH, "sinh(", new byte[]{(byte) 0xC8}),
        Arguments.of(Language.FRENCH, "sh(", new byte[]{(byte) 0xC8}),
        Arguments.of(Language.ENGLISH, "sinh-1(", new byte[]{(byte) 0xC9}),
        Arguments.of(Language.FRENCH, "Argsh(", new byte[]{(byte) 0xC9}),
        Arguments.of(Language.ENGLISH, "cosh(", new byte[]{(byte) 0xCA}),
        Arguments.of(Language.FRENCH, "ch(", new byte[]{(byte) 0xCA}),
        Arguments.of(Language.ENGLISH, "cosh-1(", new byte[]{(byte) 0xCB}),
        Arguments.of(Language.FRENCH, "Argch(", new byte[]{(byte) 0xCB}),
        Arguments.of(Language.ENGLISH, "tanh(", new byte[]{(byte) 0xCC}),
        Arguments.of(Language.FRENCH, "th(", new byte[]{(byte) 0xCC}),
        Arguments.of(Language.ENGLISH, "tanh-1(", new byte[]{(byte) 0xCD}),
        Arguments.of(Language.FRENCH, "Argth(", new byte[]{(byte) 0xCD}),
        Arguments.of(Language.ENGLISH, "If ", new byte[]{(byte) 0xCE}),
        Arguments.of(Language.FRENCH, "If ", new byte[]{(byte) 0xCE}),
        Arguments.of(Language.ENGLISH, "Then", new byte[]{(byte) 0xCF}),
        Arguments.of(Language.FRENCH, "Then", new byte[]{(byte) 0xCF}),

        // 0xD#
        Arguments.of(Language.ENGLISH, "Else", new byte[]{(byte) 0xD0}),
        Arguments.of(Language.FRENCH, "Else", new byte[]{(byte) 0xD0}),
        Arguments.of(Language.ENGLISH, "While ", new byte[]{(byte) 0xD1}),
        Arguments.of(Language.FRENCH, "While ", new byte[]{(byte) 0xD1}),
        Arguments.of(Language.ENGLISH, "Repeat ", new byte[]{(byte) 0xD2}),
        Arguments.of(Language.FRENCH, "Repeat ", new byte[]{(byte) 0xD2}),
        Arguments.of(Language.ENGLISH, "For(", new byte[]{(byte) 0xD3}),
        Arguments.of(Language.FRENCH, "For(", new byte[]{(byte) 0xD3}),
        Arguments.of(Language.ENGLISH, "End", new byte[]{(byte) 0xD4}),
        Arguments.of(Language.FRENCH, "End", new byte[]{(byte) 0xD4}),
        Arguments.of(Language.ENGLISH, "Return", new byte[]{(byte) 0xD5}),
        Arguments.of(Language.FRENCH, "Return", new byte[]{(byte) 0xD5}),
        Arguments.of(Language.ENGLISH, "Lbl ", new byte[]{(byte) 0xD6}),
        Arguments.of(Language.FRENCH, "Lbl ", new byte[]{(byte) 0xD6}),
        Arguments.of(Language.ENGLISH, "Goto ", new byte[]{(byte) 0xD7}),
        Arguments.of(Language.FRENCH, "Goto ", new byte[]{(byte) 0xD7}),
        Arguments.of(Language.ENGLISH, "Pause ", new byte[]{(byte) 0xD8}),
        Arguments.of(Language.FRENCH, "Pause ", new byte[]{(byte) 0xD8}),
        Arguments.of(Language.ENGLISH, "Stop", new byte[]{(byte) 0xD9}),
        Arguments.of(Language.FRENCH, "Stop", new byte[]{(byte) 0xD9}),
        Arguments.of(Language.ENGLISH, "IS>(", new byte[]{(byte) 0xDA}),
        Arguments.of(Language.FRENCH, "IS>(", new byte[]{(byte) 0xDA}),
        Arguments.of(Language.ENGLISH, "DS<(", new byte[]{(byte) 0xDB}),
        Arguments.of(Language.FRENCH, "DS<(", new byte[]{(byte) 0xDB}),
        Arguments.of(Language.ENGLISH, "Input ", new byte[]{(byte) 0xDC}),
        Arguments.of(Language.FRENCH, "Input ", new byte[]{(byte) 0xDC}),
        Arguments.of(Language.ENGLISH, "Prompt ", new byte[]{(byte) 0xDD}),
        Arguments.of(Language.FRENCH, "Prompt ", new byte[]{(byte) 0xDD}),
        Arguments.of(Language.ENGLISH, "Disp ", new byte[]{(byte) 0xDE}),
        Arguments.of(Language.FRENCH, "Disp ", new byte[]{(byte) 0xDE}),
        Arguments.of(Language.ENGLISH, "DispGraph", new byte[]{(byte) 0xDF}),
        Arguments.of(Language.FRENCH, "AffGraph", new byte[]{(byte) 0xDF}),

        // 0xE#
        Arguments.of(Language.ENGLISH, "Output(", new byte[]{(byte) 0xE0}),
        Arguments.of(Language.FRENCH, "Output(", new byte[]{(byte) 0xE0}),
        Arguments.of(Language.ENGLISH, "ClrHome", new byte[]{(byte) 0xE1}),
        Arguments.of(Language.FRENCH, "EffEcr", new byte[]{(byte) 0xE1}),
        Arguments.of(Language.ENGLISH, "Fill(", new byte[]{(byte) 0xE2}),
        Arguments.of(Language.FRENCH, "Remplir(", new byte[]{(byte) 0xE2}),
        Arguments.of(Language.ENGLISH, "SortA(", new byte[]{(byte) 0xE3}),
        Arguments.of(Language.FRENCH, "Tricroi(", new byte[]{(byte) 0xE3}),
        Arguments.of(Language.ENGLISH, "SortD(", new byte[]{(byte) 0xE4}),
        Arguments.of(Language.FRENCH, "TriDécroi(", new byte[]{(byte) 0xE4}),
        Arguments.of(Language.ENGLISH, "DispTable", new byte[]{(byte) 0xE5}),
        Arguments.of(Language.FRENCH, "AffTable", new byte[]{(byte) 0xE5}),
        Arguments.of(Language.ENGLISH, "Menu(", new byte[]{(byte) 0xE6}),
        Arguments.of(Language.FRENCH, "Menu(", new byte[]{(byte) 0xE6}),
        Arguments.of(Language.ENGLISH, "Send(", new byte[]{(byte) 0xE7}),
        Arguments.of(Language.FRENCH, "Envoi(", new byte[]{(byte) 0xE7}),
        Arguments.of(Language.ENGLISH, "Get(", new byte[]{(byte) 0xE8}),
        Arguments.of(Language.FRENCH, "Capt(", new byte[]{(byte) 0xE8}),
        Arguments.of(Language.ENGLISH, "PlotsOn ", new byte[]{(byte) 0xE9}),
        Arguments.of(Language.FRENCH, "GraphAff ", new byte[]{(byte) 0xE9}),
        Arguments.of(Language.ENGLISH, "PlotsOff ", new byte[]{(byte) 0xEA}),
        Arguments.of(Language.FRENCH, "GraphNAff ", new byte[]{(byte) 0xEA}),
        Arguments.of(Language.ENGLISH, "ʟ", new byte[]{(byte) 0xEB}),
        Arguments.of(Language.FRENCH, "ʟ", new byte[]{(byte) 0xEB}),
        Arguments.of(Language.ENGLISH, "&L;", new byte[]{(byte) 0xEB}),
        Arguments.of(Language.FRENCH, "&L;", new byte[]{(byte) 0xEB}),
        Arguments.of(Language.ENGLISH, "Plot1(", new byte[]{(byte) 0xEC}),
        Arguments.of(Language.FRENCH, "Graph1(", new byte[]{(byte) 0xEC}),
        Arguments.of(Language.ENGLISH, "Plot2(", new byte[]{(byte) 0xED}),
        Arguments.of(Language.FRENCH, "Graph2(", new byte[]{(byte) 0xED}),
        Arguments.of(Language.ENGLISH, "Plot3(", new byte[]{(byte) 0xEE}),
        Arguments.of(Language.FRENCH, "Graph3(", new byte[]{(byte) 0xEE}),
        // 0xEF 0x## TI-84+ tokens

        // 0xF#
        Arguments.of(Language.ENGLISH, "^", new byte[]{(byte) 0xF0}),
        Arguments.of(Language.FRENCH, "^", new byte[]{(byte) 0xF0}),
        Arguments.of(Language.ENGLISH, "&xrt;", new byte[]{(byte) 0xF1}),
        Arguments.of(Language.FRENCH, "&xrt;", new byte[]{(byte) 0xF1}),
        Arguments.of(Language.ENGLISH, "1-Var Stats ", new byte[]{(byte) 0xF2}),
        Arguments.of(Language.FRENCH, "Stats 1-Var ", new byte[]{(byte) 0xF2}),
        Arguments.of(Language.ENGLISH, "2-Var Stats ", new byte[]{(byte) 0xF3}),
        Arguments.of(Language.FRENCH, "Stats 2-Var ", new byte[]{(byte) 0xF3}),
        Arguments.of(Language.ENGLISH, "LinReg(a+bx) ", new byte[]{(byte) 0xF4}),
        Arguments.of(Language.FRENCH, "RegLin(a+bx) ", new byte[]{(byte) 0xF4}),
        Arguments.of(Language.ENGLISH, "ExpReg ", new byte[]{(byte) 0xF5}),
        Arguments.of(Language.FRENCH, "RegExp ", new byte[]{(byte) 0xF5}),
        Arguments.of(Language.ENGLISH, "LnReg ", new byte[]{(byte) 0xF6}),
        Arguments.of(Language.FRENCH, "RegLn ", new byte[]{(byte) 0xF6}),
        Arguments.of(Language.ENGLISH, "PwrReg ", new byte[]{(byte) 0xF7}),
        Arguments.of(Language.FRENCH, "RegPuiss ", new byte[]{(byte) 0xF7}),
        Arguments.of(Language.ENGLISH, "Med-Med", new byte[]{(byte) 0xF8}),
        Arguments.of(Language.FRENCH, "Med-Med", new byte[]{(byte) 0xF8}),
        Arguments.of(Language.ENGLISH, "QuadReg ", new byte[]{(byte) 0xF9}),
        Arguments.of(Language.FRENCH, "RegQuad ", new byte[]{(byte) 0xF9}),
        Arguments.of(Language.ENGLISH, "ClrList ", new byte[]{(byte) 0xFA}),
        Arguments.of(Language.FRENCH, "EffListe ", new byte[]{(byte) 0xFA}),
        Arguments.of(Language.ENGLISH, "ClrTable", new byte[]{(byte) 0xFB}),
        Arguments.of(Language.FRENCH, "EffTable", new byte[]{(byte) 0xFB}),
        Arguments.of(Language.ENGLISH, "Histogram", new byte[]{(byte) 0xFC}),
        Arguments.of(Language.FRENCH, "Histogramme", new byte[]{(byte) 0xFC}),
        Arguments.of(Language.ENGLISH, "xyLine", new byte[]{(byte) 0xFD}),
        Arguments.of(Language.FRENCH, "Polygone", new byte[]{(byte) 0xFD}),
        Arguments.of(Language.ENGLISH, "Scatter", new byte[]{(byte) 0xFE}),
        Arguments.of(Language.FRENCH, "Nuage", new byte[]{(byte) 0xFE}),
        Arguments.of(Language.ENGLISH, "LinReg(ax+b) ", new byte[]{(byte) 0xFF}),
        Arguments.of(Language.FRENCH, "RegLin(ax+b) ", new byte[]{(byte) 0xFF})
    );
  }
}
